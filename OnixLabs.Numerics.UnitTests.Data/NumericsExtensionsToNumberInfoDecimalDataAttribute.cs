// Copyright Â© 2020 ONIXLabs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

using System.Numerics;
using System.Reflection;
using Xunit.Sdk;

namespace OnixLabs.Numerics.UnitTests.Data;

public sealed class NumericsExtensionsToNumberInfoDecimalDataAttribute : DataAttribute
{
    private static readonly (decimal Value, BigInteger UnscaledValue, int Scale, BigInteger Significand, int Exponent, int Sign, int Precision)[] Data =
    [
        (decimal.Zero, 0, 0, 0, 0, 0, 1),
        (decimal.MaxValue, (BigInteger)79228162514264337593543950335m, 0, (BigInteger)79228162514264337593543950335m, 0, 1, 29),
        (decimal.MinValue, (BigInteger)(-79228162514264337593543950335m), 0, (BigInteger)(-79228162514264337593543950335m), 0, -1, 29),
        (1.0m, 10, 1, 1, 0, 1, 2),
        (1.00m, 100, 2, 1, 0, 1, 3),
        (1.000m, 1000, 3, 1, 0, 1, 4),
        (1.0000m, 10000, 4, 1, 0, 1, 5),
        (1.00000m, 100000, 5, 1, 0, 1, 6),
        (1.000000m, 1000000, 6, 1, 0, 1, 7),
        (1.0000000m, 10000000, 7, 1, 0, 1, 8),
        (1.00000000m, 100000000, 8, 1, 0, 1, 9),
        (1.000000000m, 1000000000, 9, 1, 0, 1, 10),
        (1.0000000000m, 10000000000, 10, 1, 0, 1, 11),
        (0.1m, 1, 1, 1, -1, 1, 2),
        (0.01m, 1, 2, 1, -2, 1, 3),
        (0.001m, 1, 3, 1, -3, 1, 4),
        (0.0001m, 1, 4, 1, -4, 1, 5),
        (0.00001m, 1, 5, 1, -5, 1, 6),
        (0.000001m, 1, 6, 1, -6, 1, 7),
        (0.0000001m, 1, 7, 1, -7, 1, 8),
        (0.00000001m, 1, 8, 1, -8, 1, 9),
        (0.000000001m, 1, 9, 1, -9, 1, 10),
        (0.0000000001m, 1, 10, 1, -10, 1, 11),
        (12345678.9m, 123456789, 1, 123456789, -1, 1, 9),
        (1234567.89m, 123456789, 2, 123456789, -2, 1, 9),
        (123456.789m, 123456789, 3, 123456789, -3, 1, 9),
        (12345.6789m, 123456789, 4, 123456789, -4, 1, 9),
        (1234.56789m, 123456789, 5, 123456789, -5, 1, 9),
        (123.456789m, 123456789, 6, 123456789, -6, 1, 9),
        (12.3456789m, 123456789, 7, 123456789, -7, 1, 9),
        (1.23456789m, 123456789, 8, 123456789, -8, 1, 9),
        (0.123456789m, 123456789, 9, 123456789, -9, 1, 10),
        (0.0123456789m, 123456789, 10, 123456789, -10, 1, 11),
        (0.00123456789m, 123456789, 11, 123456789, -11, 1, 12),
        (0.000123456789m, 123456789, 12, 123456789, -12, 1, 13),
        (0.0000123456789m, 123456789, 13, 123456789, -13, 1, 14),
        (0.00000123456789m, 123456789, 14, 123456789, -14, 1, 15),
        (0.000000123456789m, 123456789, 15, 123456789, -15, 1, 16),
        (0.0000000123456789m, 123456789, 16, 123456789, -16, 1, 17),
        (0.00000000123456789m, 123456789, 17, 123456789, -17, 1, 18),
        (0.000000000123456789m, 123456789, 18, 123456789, -18, 1, 19),
        (123.456m, 123456, 3, 123456, -3, 1, 6),
        (123.4560m, 1234560, 4, 123456, -3, 1, 7),
        (123.45600m, 12345600, 5, 123456, -3, 1, 8),
        (123.456000m, 123456000, 6, 123456, -3, 1, 9),
        (123.4560000m, 1234560000, 7, 123456, -3, 1, 10),
        (123.45600000m, 12345600000, 8, 123456, -3, 1, 11),
        (123.456000000m, 123456000000, 9, 123456, -3, 1, 12),
        (123.4560000000m, 1234560000000, 10, 123456, -3, 1, 13),
        (123.45600000000m, 12345600000000, 11, 123456, -3, 1, 14),
        (123.456000000000m, 123456000000000, 12, 123456, -3, 1, 15),
        (123.4560000000000m, 1234560000000000, 13, 123456, -3, 1, 16),
        (-1.0m, -10, 1, -1, 0, -1, 2),
        (-1.00m, -100, 2, -1, 0, -1, 3),
        (-1.000m, -1000, 3, -1, 0, -1, 4),
        (-1.0000m, -10000, 4, -1, 0, -1, 5),
        (-1.00000m, -100000, 5, -1, 0, -1, 6),
        (-1.000000m, -1000000, 6, -1, 0, -1, 7),
        (-1.0000000m, -10000000, 7, -1, 0, -1, 8),
        (-1.00000000m, -100000000, 8, -1, 0, -1, 9),
        (-1.000000000m, -1000000000, 9, -1, 0, -1, 10),
        (-1.0000000000m, -10000000000, 10, -1, 0, -1, 11),
        (-0.1m, -1, 1, -1, -1, -1, 2),
        (-0.01m, -1, 2, -1, -2, -1, 3),
        (-0.001m, -1, 3, -1, -3, -1, 4),
        (-0.0001m, -1, 4, -1, -4, -1, 5),
        (-0.00001m, -1, 5, -1, -5, -1, 6),
        (-0.000001m, -1, 6, -1, -6, -1, 7),
        (-0.0000001m, -1, 7, -1, -7, -1, 8),
        (-0.00000001m, -1, 8, -1, -8, -1, 9),
        (-0.000000001m, -1, 9, -1, -9, -1, 10),
        (-0.0000000001m, -1, 10, -1, -10, -1, 11),
        (-12345678.9m, -123456789, 1, -123456789, -1, -1, 9),
        (-1234567.89m, -123456789, 2, -123456789, -2, -1, 9),
        (-123456.789m, -123456789, 3, -123456789, -3, -1, 9),
        (-12345.6789m, -123456789, 4, -123456789, -4, -1, 9),
        (-1234.56789m, -123456789, 5, -123456789, -5, -1, 9),
        (-123.456789m, -123456789, 6, -123456789, -6, -1, 9),
        (-12.3456789m, -123456789, 7, -123456789, -7, -1, 9),
        (-1.23456789m, -123456789, 8, -123456789, -8, -1, 9),
        (-0.123456789m, -123456789, 9, -123456789, -9, -1, 10),
        (-0.0123456789m, -123456789, 10, -123456789, -10, -1, 11),
        (-0.00123456789m, -123456789, 11, -123456789, -11, -1, 12),
        (-0.000123456789m, -123456789, 12, -123456789, -12, -1, 13),
        (-0.0000123456789m, -123456789, 13, -123456789, -13, -1, 14),
        (-0.00000123456789m, -123456789, 14, -123456789, -14, -1, 15),
        (-0.000000123456789m, -123456789, 15, -123456789, -15, -1, 16),
        (-0.0000000123456789m, -123456789, 16, -123456789, -16, -1, 17),
        (-0.00000000123456789m, -123456789, 17, -123456789, -17, -1, 18),
        (-0.000000000123456789m, -123456789, 18, -123456789, -18, -1, 19),
        (-123.456m, -123456, 3, -123456, -3, -1, 6),
        (-123.4560m, -1234560, 4, -123456, -3, -1, 7),
        (-123.45600m, -12345600, 5, -123456, -3, -1, 8),
        (-123.456000m, -123456000, 6, -123456, -3, -1, 9),
        (-123.4560000m, -1234560000, 7, -123456, -3, -1, 10),
        (-123.45600000m, -12345600000, 8, -123456, -3, -1, 11),
        (-123.456000000m, -123456000000, 9, -123456, -3, -1, 12),
        (-123.4560000000m, -1234560000000, 10, -123456, -3, -1, 13),
        (-123.45600000000m, -12345600000000, 11, -123456, -3, -1, 14),
        (-123.456000000000m, -123456000000000, 12, -123456, -3, -1, 15),
        (-123.4560000000000m, -1234560000000000, 13, -123456, -3, -1, 16),
    ];

    public override IEnumerable<object[]> GetData(MethodInfo testMethod)
    {
        foreach ((decimal value, BigInteger unscaledValue, int scale, BigInteger significand, int exponent, int sign, int precision) in Data)
            yield return [value, unscaledValue, scale, significand, exponent, sign, precision];
    }
}
