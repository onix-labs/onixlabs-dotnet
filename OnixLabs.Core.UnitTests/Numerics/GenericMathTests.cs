// Copyright 2020-2023 ONIXLabs
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//    http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

using OnixLabs.Core.Numerics;
using OnixLabs.Core.UnitTests.MockData;
using Xunit;

namespace OnixLabs.Core.UnitTests.Numerics;

public sealed class GenericMathTests
{
    [Theory(DisplayName = "GenericMath.GreatestCommonDenominator should return the expected result")]
    [InlineData(1, 1, 1)]
    [InlineData(1, 2, 1)]
    [InlineData(2, 2, 2)]
    [InlineData(3, 2, 1)]
    [InlineData(4, 2, 2)]
    [InlineData(5, 2, 1)]
    [InlineData(6, 2, 2)]
    [InlineData(7, 2, 1)]
    [InlineData(8, 2, 2)]
    [InlineData(9, 2, 1)]
    [InlineData(10, 2, 2)]
    [InlineData(1, 3, 1)]
    [InlineData(2, 3, 1)]
    [InlineData(3, 3, 3)]
    [InlineData(4, 3, 1)]
    [InlineData(5, 3, 1)]
    [InlineData(6, 3, 3)]
    [InlineData(7, 3, 1)]
    [InlineData(8, 3, 1)]
    [InlineData(9, 3, 3)]
    [InlineData(10, 3, 1)]
    [InlineData(1, 4, 1)]
    [InlineData(2, 4, 2)]
    [InlineData(3, 4, 1)]
    [InlineData(4, 4, 4)]
    [InlineData(5, 4, 1)]
    [InlineData(6, 4, 2)]
    [InlineData(7, 4, 1)]
    [InlineData(8, 4, 4)]
    [InlineData(9, 4, 1)]
    [InlineData(10, 4, 2)]
    [InlineData(1, 5, 1)]
    [InlineData(2, 5, 1)]
    [InlineData(3, 5, 1)]
    [InlineData(4, 5, 1)]
    [InlineData(5, 5, 5)]
    [InlineData(6, 5, 1)]
    [InlineData(7, 5, 1)]
    [InlineData(8, 5, 1)]
    [InlineData(9, 5, 1)]
    [InlineData(10, 5, 5)]
    [InlineData(1638548483, 443553770, 11)]
    [InlineData(1641707503, 1441550275, 1)]
    [InlineData(437137057, 967165430, 7)]
    [InlineData(1078338879, 1379933495, 1)]
    [InlineData(374500212, 10110513, 3)]
    [InlineData(1254241332, 26675607, 3)]
    [InlineData(996728758, 1514172510, 2)]
    [InlineData(610927293, 976554674, 1)]
    [InlineData(852277951, 139575931, 1)]
    [InlineData(1196468594, 1827484743, 1)]
    [InlineData(404775304, 258159982, 2)]
    [InlineData(1044451584, 75891716, 4)]
    [InlineData(302816335, 1074283151, 1)]
    [InlineData(584873459, 1569823011, 1)]
    [InlineData(1192870482, 404292336, 6)]
    [InlineData(1314302560, 406328018, 2)]
    [InlineData(677440485, 2004870784, 1)]
    [InlineData(2120287020, 920001380, 20)]
    [InlineData(885633157, 1563704715, 1)]
    [InlineData(890068956, 295643988, 12)]
    [InlineData(1493928126, 20191611, 3)]
    [InlineData(1769088251, 611456545, 7)]
    [InlineData(1019239907, 1828932542, 1)]
    [InlineData(872397005, 1211883739, 1)]
    [InlineData(176775166, 1431936894, 2)]
    [InlineData(1436268018, 1006287800, 34)]
    [InlineData(231635817, 1564919242, 1)]
    [InlineData(1403400821, 727080945, 23)]
    [InlineData(1708432796, 681848591, 1)]
    [InlineData(526441407, 1001357121, 3)]
    [InlineData(948590663, 1219403324, 1)]
    [InlineData(410880471, 674918894, 1)]
    [InlineData(1417405188, 1978353000, 12)]
    [InlineData(1069454408, 152239715, 1)]
    [InlineData(329849624, 1806882393, 1)]
    [InlineData(1125209389, 531368813, 1)]
    [InlineData(1468841720, 1347872071, 1)]
    [InlineData(1614946431, 890564439, 3)]
    [InlineData(410874953, 38695826, 1)]
    [InlineData(398426151, 1980655473, 3)]
    [InlineData(619673080, 1270292879, 1)]
    [InlineData(632347380, 1893985076, 4)]
    [InlineData(1187940780, 276038817, 3)]
    [InlineData(582756195, 1367265098, 1)]
    [InlineData(592772974, 1836857615, 1)]
    [InlineData(2080325860, 1578220861, 1)]
    [InlineData(1493487270, 2023939337, 1)]
    [InlineData(685877479, 1236478961, 1)]
    [InlineData(1244251523, 95045569, 1)]
    [InlineData(1556070627, 257240236, 1)]
    [InlineData(418813799, 1384388269, 1)]
    [InlineData(697749840, 1571242231, 1)]
    [InlineData(125195812, 2121281059, 1)]
    [InlineData(1226948630, 1262074152, 2)]
    [InlineData(1399276512, 658638291, 3)]
    [InlineData(147022712, 340128909, 1)]
    [InlineData(1698869645, 1789281580, 5)]
    [InlineData(787467010, 611938602, 22)]
    [InlineData(1259131570, 507728153, 1)]
    [InlineData(1547649083, 1078170091, 1)]
    [InlineData(233278197, 1088999433, 3)]
    [InlineData(2060306126, 901685382, 2)]
    [InlineData(1658189424, 1060828766, 2)]
    [InlineData(1334955715, 1403800178, 1)]
    [InlineData(1084986186, 114133910, 2)]
    [InlineData(1180789510, 952506223, 1)]
    [InlineData(1723335335, 2020721758, 1)]
    [InlineData(510923286, 576785277, 9)]
    [InlineData(653306514, 1638876519, 21)]
    [InlineData(1692448400, 1568054226, 2)]
    [InlineData(1452182494, 1310294513, 1)]
    [InlineData(1286484601, 2056428306, 1)]
    [InlineData(1560421351, 1214125477, 1)]
    [InlineData(26207725, 1952078432, 1)]
    [InlineData(1562188983, 1141043102, 31)]
    [InlineData(2141554607, 309744985, 1)]
    [InlineData(1854296963, 290804803, 1)]
    [InlineData(1001988838, 1204808940, 2)]
    [InlineData(2112210950, 1417199800, 50)]
    [InlineData(97655366, 593725494, 2)]
    [InlineData(1412911202, 2056095359, 1)]
    [InlineData(123530169, 42880460, 7)]
    [InlineData(342234257, 111462636, 1)]
    [InlineData(976071852, 1653168682, 2)]
    [InlineData(538390479, 473866484, 1)]
    [InlineData(267404851, 469356663, 1)]
    [InlineData(798209481, 1436789141, 1)]
    [InlineData(777311030, 1614289427, 1)]
    [InlineData(1352490684, 1214143421, 1)]
    [InlineData(329699070, 745164382, 2)]
    [InlineData(294316, 841984635, 1)]
    [InlineData(1038431776, 92887311, 1)]
    [InlineData(132660806, 1954290358, 2)]
    [InlineData(1621418842, 1714215080, 2)]
    [InlineData(2071020487, 1893660011, 1)]
    [InlineData(837681317, 525623313, 1)]
    [InlineData(1660315919, 1101222662, 1)]
    [InlineData(633435757, 1541532397, 1)]
    [InlineData(1771952017, 1558771538, 1)]
    [InlineData(1617470295, 608694611, 7)]
    [InlineData(1837281821, 2005716189, 1)]
    [InlineData(2129120806, 1867795579, 1)]
    [InlineData(410302139, 892180612, 1)]
    [InlineData(1070151177, 705155403, 3)]
    [InlineData(357146899, 1856089502, 1)]
    [InlineData(552011517, 1385316151, 1)]
    [InlineData(1157553675, 1127994050, 25)]
    [InlineData(1284533033, 1128269581, 1)]
    [InlineData(773300392, 1043203652, 4)]
    [InlineData(1245681692, 1022069640, 4)]
    [InlineData(501755526, 831035798, 2)]
    [InlineData(975065645, 352711220, 5)]
    [InlineData(139169605, 537865213, 1)]
    [InlineData(889504893, 103199325, 3)]
    [InlineData(1868669832, 1354209710, 2)]
    [InlineData(2060186745, 1058633919, 3)]
    [InlineData(141818905, 1141928249, 1)]
    [InlineData(412894306, 459574629, 1)]
    [InlineData(2002365892, 774664200, 4)]
    [InlineData(234508649, 1851391313, 1)]
    [InlineData(932105177, 735221425, 1)]
    [InlineData(268913951, 132986993, 1)]
    [InlineData(948380672, 1279949075, 1)]
    [InlineData(1257643955, 185055106, 1)]
    [InlineData(838929281, 52893976, 1)]
    [InlineData(1641316123, 2054346972, 1)]
    [InlineData(179989762, 545592907, 1)]
    [InlineData(1372878737, 1056240250, 1)]
    [InlineData(1427729916, 2106504455, 1)]
    [InlineData(2115224757, 1898754961, 1)]
    [InlineData(1007128195, 164377618, 1)]
    [InlineData(1540189321, 122928858, 1)]
    [InlineData(1026079465, 1185150410, 5)]
    [InlineData(1315529925, 377204878, 1)]
    [InlineData(501983396, 640231524, 4)]
    [InlineData(249723867, 184178305, 1)]
    [InlineData(189554180, 348590281, 1)]
    [InlineData(627351819, 1909013927, 1)]
    [InlineData(641787014, 201640228, 2)]
    [InlineData(710794333, 1566781230, 1)]
    [InlineData(900983411, 828405226, 1)]
    [InlineData(861379071, 280799959, 1)]
    [InlineData(416731420, 464248521, 1)]
    [InlineData(1920860075, 1154922358, 1)]
    [InlineData(1832387633, 431539458, 1)]
    [InlineData(1093955614, 1784202785, 1)]
    [InlineData(1234566819, 762292298, 1)]
    [InlineData(1367661749, 557756239, 1)]
    [InlineData(207155229, 1328737968, 3)]
    [InlineData(1528954941, 1170125274, 3)]
    [InlineData(1202522330, 1057293668, 2)]
    [InlineData(5799224, 1951514951, 1)]
    [InlineData(872395764, 1792998791, 1)]
    [InlineData(1752706328, 847380834, 2)]
    [InlineData(1515098492, 1763236608, 4)]
    [InlineData(1855147943, 599929549, 1)]
    [InlineData(1235740864, 741800600, 8)]
    [InlineData(1889704602, 1240294123, 1)]
    [InlineData(1880894303, 1086580208, 19)]
    [InlineData(1061086757, 1642513680, 1)]
    [InlineData(1209162544, 1240706451, 1)]
    [InlineData(1280462041, 359600261, 1)]
    [InlineData(1809169231, 1460595308, 1)]
    [InlineData(308037515, 1902720180, 5)]
    [InlineData(368688725, 1437603389, 1)]
    [InlineData(1164814836, 698759919, 3)]
    [InlineData(1890533293, 2077343730, 11)]
    [InlineData(433161114, 1423547774, 2)]
    [InlineData(366197212, 1830402910, 2)]
    [InlineData(876570016, 419994236, 4)]
    [InlineData(1168777461, 1605396808, 1)]
    [InlineData(61888520, 629618039, 1)]
    [InlineData(176346470, 226769366, 2)]
    [InlineData(1207898446, 877368784, 2)]
    [InlineData(1969533155, 1916752493, 1)]
    [InlineData(50305112, 660358179, 13)]
    [InlineData(1368162311, 899548861, 1)]
    [InlineData(63839005, 363808864, 1)]
    [InlineData(2071779437, 391607594, 133)]
    [InlineData(394157509, 1175820826, 1)]
    [InlineData(405351428, 974466330, 2)]
    [InlineData(1398505659, 986888682, 3)]
    [InlineData(1453153277, 711829958, 1)]
    [InlineData(946335288, 1436854272, 24)]
    [InlineData(951990525, 128131711, 1)]
    [InlineData(453203796, 1001458046, 2)]
    [InlineData(1687929552, 853755293, 1)]
    [InlineData(1474941269, 1463045340, 1)]
    [InlineData(1615063243, 912301574, 1)]
    [InlineData(1028218271, 434773467, 1)]
    [InlineData(1546284318, 1284832085, 1)]
    [InlineData(217384387, 567905634, 1)]
    [InlineData(955277447, 1765799271, 1)]
    [InlineData(2111391000, 1587190848, 24)]
    [InlineData(1971339381, 1566891087, 3)]
    [InlineData(94980036, 1518753632, 4)]
    [InlineData(1625707164, 409046993, 1)]
    [InlineData(58330287, 1393094560, 1)]
    [InlineData(1377267756, 1704890147, 1)]
    [InlineData(1448230412, 2026262249, 1)]
    [InlineData(1782339468, 620086038, 78)]
    [InlineData(494894058, 1842379456, 2)]
    [InlineData(1049725476, 394437494, 2)]
    [InlineData(832720452, 1407709731, 3)]
    [InlineData(1935698864, 997480589, 1)]
    [InlineData(1543063078, 514518565, 1)]
    [InlineData(2005908362, 1726726280, 2)]
    [InlineData(872746250, 2097822009, 1)]
    [InlineData(277979010, 1423021077, 3)]
    [InlineData(1124833402, 456406931, 1)]
    [InlineData(383419295, 522004613, 1)]
    [InlineData(144172212, 156484969, 1)]
    [InlineData(1225995921, 835005045, 3)]
    [InlineData(1502797467, 40943744, 1)]
    [InlineData(424627633, 1293756781, 1)]
    [InlineData(509538577, 1155175706, 1)]
    [InlineData(1931722884, 253200678, 6)]
    [InlineData(1311215677, 1104132272, 1)]
    [InlineData(889783341, 537182640, 3)]
    [InlineData(1175888927, 799815301, 1)]
    [InlineData(80736859, 1714869893, 1)]
    [InlineData(370837837, 324054149, 1)]
    [InlineData(175367986, 2143561262, 2)]
    [InlineData(2004685325, 1275720965, 5)]
    [InlineData(279932191, 22605350, 1)]
    [InlineData(214090871, 890905141, 1)]
    [InlineData(2001375464, 233639598, 2)]
    [InlineData(810431209, 836874980, 1)]
    [InlineData(1664953749, 197201174, 1)]
    [InlineData(633882739, 644572957, 7)]
    [InlineData(1351133285, 872342178, 1)]
    [InlineData(717386441, 265571421, 1)]
    [InlineData(31031167, 2004536889, 1)]
    [InlineData(96062321, 786240433, 1)]
    [InlineData(1256744368, 2145435038, 2)]
    [InlineData(527831902, 1993452045, 13)]
    [InlineData(1355702009, 546733107, 17)]
    [InlineData(909919327, 371702912, 1)]
    [InlineData(725015494, 771367619, 1)]
    [InlineData(1693421459, 743054877, 1)]
    [InlineData(671772471, 1234715193, 3)]
    [InlineData(652345952, 1860345364, 4)]
    [InlineData(1136853034, 1653577430, 2)]
    [InlineData(1743821697, 375223160, 1)]
    [InlineData(164992158, 701735517, 9)]
    [InlineData(199997226, 605507537, 1)]
    [InlineData(2066534084, 957924745, 1)]
    [InlineData(462172403, 391119334, 1)]
    [InlineData(1535796014, 258346017, 1)]
    [InlineData(1058393021, 473158408, 1)]
    [InlineData(1638883898, 2127630117, 1)]
    [InlineData(448687749, 2106039514, 1)]
    [InlineData(313343322, 245815533, 3)]
    [InlineData(1485098208, 1441343235, 3)]
    [InlineData(697688395, 1598349316, 1)]
    [InlineData(941484082, 173069791, 1)]
    [InlineData(282561303, 45231888, 3)]
    [InlineData(1516290678, 376733686, 14)]
    [InlineData(85142586, 888885574, 2)]
    [InlineData(969324962, 1375603177, 1)]
    [InlineData(1524364994, 1833945443, 1)]
    [InlineData(1787958277, 1060220302, 1)]
    [InlineData(993907354, 818293590, 2)]
    [InlineData(1573339342, 666895070, 2)]
    [InlineData(292340375, 578276307, 1)]
    [InlineData(2112209908, 850962835, 1)]
    [InlineData(1374662081, 935953338, 1)]
    [InlineData(1721343395, 2040284126, 1)]
    [InlineData(550747070, 103676184, 2)]
    [InlineData(1681483658, 306406413, 1)]
    [InlineData(1954576277, 1152408409, 1)]
    [InlineData(1434288329, 339356200, 1)]
    [InlineData(514662371, 944465899, 1)]
    [InlineData(1923127197, 1505858942, 1)]
    [InlineData(1547555487, 5632398, 3)]
    [InlineData(421727900, 736921838, 2)]
    [InlineData(668499100, 1936797756, 4)]
    [InlineData(1485784001, 2019735070, 1)]
    [InlineData(1567337427, 1516628853, 333)]
    [InlineData(815058170, 1884420696, 2)]
    [InlineData(1127210823, 955638103, 1)]
    [InlineData(1290061166, 1853569494, 2)]
    [InlineData(1810645964, 748781203, 19)]
    [InlineData(858883589, 1208116024, 1)]
    [InlineData(198824666, 1211980770, 2)]
    [InlineData(952274680, 576951551, 1)]
    [InlineData(137154718, 291824486, 2)]
    [InlineData(1934622118, 2051801409, 1)]
    [InlineData(599631988, 2095548690, 2)]
    [InlineData(1935060177, 521158544, 1)]
    [InlineData(687176504, 230102541, 1)]
    [InlineData(309371324, 1465359442, 2)]
    [InlineData(942577206, 1230488258, 2)]
    [InlineData(880551190, 1546815622, 2)]
    [InlineData(265978630, 1533889376, 2)]
    [InlineData(104801065, 1220347568, 1)]
    [InlineData(1375260937, 1781330619, 1)]
    [InlineData(1544575614, 2046587, 1)]
    [InlineData(1862479776, 521235415, 1)]
    [InlineData(319305748, 1341377950, 2)]
    [InlineData(454194108, 1523064108, 12)]
    [InlineData(376297082, 577520767, 1)]
    [InlineData(1945059318, 908308797, 3)]
    [InlineData(1533948943, 24452352, 1)]
    [InlineData(1614699925, 394514522, 1)]
    [InlineData(184035309, 2141623003, 1)]
    [InlineData(729035534, 1838349795, 1)]
    [InlineData(1612649570, 1248893510, 10)]
    [InlineData(349233247, 1945148044, 1)]
    [InlineData(812555138, 122581441, 1)]
    [InlineData(1012652767, 1284763312, 7)]
    [InlineData(1332292303, 165811858, 1)]
    [InlineData(1374701652, 1790408788, 4)]
    [InlineData(1664171013, 1074797461, 1)]
    [InlineData(1862812309, 1163172654, 1)]
    [InlineData(834467353, 63608588, 101)]
    [InlineData(1298393641, 752972472, 1)]
    [InlineData(1982530835, 263283069, 1)]
    [InlineData(1140811619, 2125631782, 1)]
    [InlineData(1461156145, 1554711751, 1)]
    [InlineData(1671545040, 1787647689, 3)]
    [InlineData(312617028, 2066360057, 1)]
    [InlineData(227365111, 288654201, 1)]
    [InlineData(1639150851, 1639688928, 3)]
    [InlineData(942647637, 153574538, 1)]
    [InlineData(374482622, 1101488308, 2)]
    [InlineData(669887022, 1347368704, 2)]
    [InlineData(2102083657, 1505503268, 1)]
    [InlineData(2101450402, 828043867, 1)]
    [InlineData(1623670008, 856642616, 8)]
    [InlineData(1830105296, 2038649837, 1)]
    [InlineData(953213432, 579959250, 2)]
    [InlineData(781059202, 1748106786, 2)]
    [InlineData(1892630916, 1015857758, 2)]
    [InlineData(2055818705, 1199810188, 1)]
    [InlineData(563118505, 934098289, 1)]
    [InlineData(90446256, 1147934743, 1)]
    [InlineData(2006968901, 968334954, 1)]
    [InlineData(175935366, 1666878374, 2)]
    [InlineData(655299768, 1100871537, 3)]
    [InlineData(160793060, 2138323494, 2)]
    [InlineData(1811866402, 172095165, 1)]
    [InlineData(343059442, 1444076896, 2)]
    [InlineData(240285834, 1100292148, 2)]
    [InlineData(1162160081, 334379160, 1)]
    [InlineData(1244487220, 778674500, 20)]
    [InlineData(1346883715, 699213290, 5)]
    [InlineData(281746720, 1747027972, 4)]
    [InlineData(2115580978, 1918149209, 1)]
    [InlineData(315908256, 765374452, 4)]
    [InlineData(670930735, 389486873, 1)]
    [InlineData(327501994, 121852120, 2)]
    [InlineData(1354541179, 939278803, 1)]
    [InlineData(684081228, 592345407, 3)]
    [InlineData(291060087, 2079234155, 1)]
    [InlineData(544982140, 818225803, 1)]
    [InlineData(602717500, 1585839653, 1)]
    [InlineData(693591160, 1145648635, 5)]
    [InlineData(1153195710, 2079924184, 2)]
    [InlineData(1656301552, 173254413, 1)]
    [InlineData(2111564412, 1279579505, 1)]
    [InlineData(772039108, 889185672, 4)]
    [InlineData(299930966, 1254516829, 1)]
    [InlineData(109766420, 472711752, 4)]
    [InlineData(768025649, 308313734, 1)]
    [InlineData(164201011, 1478589398, 13)]
    [InlineData(2132535408, 1481154956, 4)]
    [InlineData(1924417601, 972316132, 1)]
    [InlineData(1160593277, 899887200, 1)]
    [InlineData(1484172524, 2053761765, 1)]
    [InlineData(318199111, 418620867, 1)]
    [InlineData(394198719, 1970327315, 1)]
    [InlineData(1807015680, 1295248433, 1)]
    [InlineData(1397888678, 601185687, 1)]
    [InlineData(1205199004, 1513582076, 4)]
    [InlineData(57477819, 322349645, 1)]
    [InlineData(1857594415, 480692407, 1)]
    [InlineData(1913863830, 1070651851, 1)]
    [InlineData(958141125, 463702706, 1)]
    [InlineData(283090978, 906217566, 2)]
    [InlineData(1739181785, 569023434, 1)]
    [InlineData(1605480366, 125060996, 2)]
    [InlineData(835443650, 252411925, 25)]
    [InlineData(756515450, 1761300602, 2)]
    [InlineData(45947211, 538441326, 3)]
    [InlineData(1426308762, 6908601, 3)]
    [InlineData(1980072122, 1499152597, 1)]
    [InlineData(368317753, 554650990, 1)]
    [InlineData(993194293, 1201962618, 1)]
    [InlineData(667516661, 2124236165, 1)]
    [InlineData(309865408, 1478509941, 1)]
    [InlineData(988002643, 1492012490, 1)]
    [InlineData(547046794, 332871072, 2)]
    [InlineData(1522861337, 1537439227, 1)]
    [InlineData(979622886, 414903991, 1)]
    [InlineData(1411688325, 301365112, 1)]
    [InlineData(1567438646, 2072346699, 1)]
    [InlineData(1506757734, 1970876015, 1)]
    [InlineData(2098261023, 1721693770, 1)]
    [InlineData(732323171, 2076863801, 1)]
    [InlineData(1943493188, 292617510, 2)]
    [InlineData(1179028848, 920766853, 1)]
    [InlineData(2040478621, 1490786201, 1)]
    [InlineData(54734162, 765720549, 1)]
    [InlineData(1019928711, 968937343, 1)]
    [InlineData(1457387486, 1981338063, 1)]
    [InlineData(411911165, 2021099, 1)]
    [InlineData(287975931, 1555944093, 3)]
    [InlineData(1339953860, 487012634, 2)]
    [InlineData(1259153112, 951650511, 21)]
    [InlineData(84164419, 1664897167, 1)]
    [InlineData(1263450797, 1536746378, 1)]
    [InlineData(654253197, 1135437393, 3)]
    [InlineData(1966434758, 914803727, 1)]
    [InlineData(290372418, 504987646, 2)]
    [InlineData(896849950, 371797962, 2)]
    [InlineData(1249088927, 489574124, 1)]
    [InlineData(1139324451, 78990934, 1)]
    [InlineData(989782672, 50596547, 1)]
    [InlineData(1896231124, 1759980891, 1)]
    [InlineData(540984543, 605389317, 3)]
    [InlineData(1661344625, 298413089, 1)]
    [InlineData(602546955, 1966004128, 1)]
    [InlineData(500148727, 353735573, 1)]
    [InlineData(936093789, 324257404, 1)]
    [InlineData(1901494450, 338150631, 1)]
    [InlineData(1286455482, 1491318573, 3)]
    [InlineData(655177262, 1552469481, 1)]
    [InlineData(352788767, 393640055, 1)]
    [InlineData(207084227, 677209097, 1)]
    [InlineData(461763161, 2102144906, 1)]
    [InlineData(739593279, 2119185794, 1)]
    [InlineData(866207556, 552122918, 2)]
    [InlineData(513865330, 617563567, 1)]
    [InlineData(912982525, 1268068401, 1)]
    [InlineData(1028866343, 198859652, 1)]
    [InlineData(1819644006, 682868875, 1)]
    [InlineData(1991656930, 2125130, 10)]
    [InlineData(42424501, 571838804, 1)]
    [InlineData(1044146183, 1522201179, 1)]
    [InlineData(742402977, 1557909681, 3)]
    [InlineData(852664854, 1464655989, 3)]
    [InlineData(587435839, 794512511, 1)]
    [InlineData(369032630, 1813113669, 1)]
    [InlineData(46617008, 522140272, 16)]
    [InlineData(28022979, 1712999145, 3)]
    [InlineData(164843614, 251218769, 1)]
    [InlineData(1201500781, 638382387, 1)]
    [InlineData(1429950891, 1706557027, 1)]
    [InlineData(1945482073, 1509227019, 1)]
    [InlineData(304816647, 188573922, 3)]
    [InlineData(1749654063, 1268255680, 1)]
    [InlineData(224716645, 1737453105, 5)]
    [InlineData(275029718, 122213439, 1)]
    [InlineData(1772484545, 638476164, 1)]
    [InlineData(2099603025, 1543916760, 15)]
    [InlineData(422255910, 4891208, 2)]
    [InlineData(952404519, 2012173172, 1)]
    [InlineData(1216964009, 1833254449, 1)]
    [InlineData(1745171764, 438751144, 4)]
    [InlineData(1154282155, 1655153637, 1)]
    [InlineData(390960500, 750054055, 5)]
    [InlineData(549372730, 1355783234, 2)]
    [InlineData(767873466, 1580961062, 2)]
    [InlineData(1302449165, 1037864844, 1)]
    [InlineData(1586817827, 1350426958, 1)]
    [InlineData(1319414260, 1915344229, 1)]
    [InlineData(737772279, 1200476077, 1)]
    [InlineData(2010311408, 2066620103, 1)]
    [InlineData(1476249749, 1628443221, 1)]
    [InlineData(1988402397, 424347845, 1)]
    [InlineData(1356248761, 1393453975, 1)]
    [InlineData(1767757876, 1641861305, 1)]
    [InlineData(840697557, 1060266725, 7)]
    [InlineData(1285629085, 976386036, 1)]
    [InlineData(1758127799, 716043293, 1)]
    [InlineData(401919316, 390202974, 2)]
    [InlineData(631515988, 125400242, 2)]
    [InlineData(611989812, 976660160, 196)]
    [InlineData(675484997, 1533607052, 1)]
    [InlineData(1991515674, 2119273103, 43)]
    [InlineData(1206708599, 855530833, 1)]
    [InlineData(1103295875, 431105944, 1)]
    [InlineData(1605940072, 1076913675, 1)]
    [InlineData(532513204, 1702056212, 92)]
    [InlineData(1473923443, 844168856, 1)]
    [InlineData(2136633278, 1571488545, 1)]
    [InlineData(202294589, 1228220998, 1)]
    [InlineData(245882724, 1706154162, 6)]
    [InlineData(873265003, 1213101304, 1)]
    [InlineData(562819927, 1418389659, 1)]
    [InlineData(711199616, 1017611231, 1)]
    [InlineData(422513930, 1563870337, 1)]
    [InlineData(1034887488, 1716432705, 3)]
    [InlineData(2009282881, 1135680539, 1)]
    [InlineData(1094175043, 864958339, 1)]
    [InlineData(1375719427, 137706902, 1)]
    [InlineData(1420008897, 453154664, 1)]
    [InlineData(864854229, 762850332, 3)]
    [InlineData(1622007810, 912667575, 15)]
    public void GenericMathGreatestCommonDenominatorShouldReturnTheExpectedResult(int left, int right, int expected)
    {
        // Arrange / Act
        int actual = GenericMath.GreatestCommonDenominator(left, right);

        // Assert
        Assert.Equal(expected, actual);
    }

    [Theory(DisplayName = "GenericMath.DivRem should return the expected result using Int32")]
    [GenericMathDivRemData(1000)]
    public void GenericMathDivRemShouldReturnTheExpectedResultUsingInt32(
        int dividend,
        int divisor,
        int expectedQuotient,
        int expectedRemainder)
    {
        // Arrange / Act
        (int actualQuotient, int actualRemainder) = GenericMath.DivRem(dividend, divisor);

        // Assert
        Assert.Equal(expectedQuotient, actualQuotient);
        Assert.Equal(expectedRemainder, actualRemainder);
    }

    [Theory(DisplayName = "GenericMath.DivRem should return the expected result using Double")]
    [GenericMathDivRemData(1000)]
    public void GenericMathDivRemShouldReturnTheExpectedResultUsingDouble(
        double dividend,
        double divisor,
        double expectedQuotient,
        double expectedRemainder)
    {
        // Arrange / Act
        (double actualQuotient, double actualRemainder) = GenericMath.DivRem(dividend, divisor);

        // Assert
        Assert.Equal(expectedQuotient, actualQuotient);
        Assert.Equal(expectedRemainder, actualRemainder);
    }

    [Theory(DisplayName = "GenericMath.IntegerLength should return the expected result")]
    [GenericMathIntegerLengthData(1000)]
    public void GenericMathIntegerLengthShouldReturnTheExpectedResultUsingDouble(int value, int expected)
    {
        // Arrange / Act
        int actual = GenericMath.IntegerLength(value);

        // Assert
        Assert.Equal(expected, actual);
    }

    [Theory(DisplayName = "GenericMath.Pow should return the expected result for Int32")]
    [GenericMathPowData(1, 10, 1, 9)]
    public void GenericMathPowShouldReturnTheExpectedResultForInt32(int value, int exponent, int expected)
    {
        // Arrange / Act
        int actual = GenericMath.Pow(value, exponent);

        // Assert
        Assert.Equal(expected, actual);
    }

    [Theory(DisplayName = "GenericMath.Pow should return the expected result for Double")]
    [GenericMathPowData(-10, 10, -10, 10)]
    // TODO : Investigate precision issues and increase number of tests.
    public void GenericMathPowShouldReturnTheExpectedResultForDouble(double value, int exponent, double expected)
    {
        // Arrange / Act
        double actual = GenericMath.Pow(value, exponent);

        // Assert

        Assert.Equal(expected, actual);
    }
}
