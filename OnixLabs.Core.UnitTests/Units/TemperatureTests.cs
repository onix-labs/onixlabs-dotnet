using System;
using OnixLabs.Core.Units;
using Xunit;

namespace OnixLabs.Core.UnitTests.Units;

public sealed class TemperatureTests
{
    [Theory(DisplayName = "Temperature.FromKelvin should produce the expected conversion results")]
    [InlineData(0, -273.15, 559.72, -459.67, -90.14, -218.52, 0)]
    [InlineData(1, -272.15, 558.22, -457.87, -89.81, -217.72, 1.8)]
    [InlineData(2, -271.15, 556.72, -456.07, -89.48, -216.92, 3.6)]
    [InlineData(3, -270.15, 555.22, -454.27, -89.15, -216.12, 5.4)]
    [InlineData(4, -269.15, 553.72, -452.47, -88.82, -215.32, 7.2)]
    [InlineData(5, -268.15, 552.22, -450.67, -88.49, -214.52, 9)]
    [InlineData(6, -267.15, 550.72, -448.87, -88.16, -213.72, 10.8)]
    [InlineData(7, -266.15, 549.22, -447.07, -87.83, -212.92, 12.6)]
    [InlineData(8, -265.15, 547.72, -445.27, -87.5, -212.12, 14.4)]
    [InlineData(9, -264.15, 546.22, -443.47, -87.17, -211.32, 16.2)]
    [InlineData(10, -263.15, 544.72, -441.67, -86.84, -210.52, 18)]
    [InlineData(20, -253.15, 529.72, -423.67, -83.54, -202.52, 36)]
    [InlineData(30, -243.15, 514.72, -405.67, -80.24, -194.52, 54)]
    [InlineData(40, -233.15, 499.72, -387.67, -76.94, -186.52, 72)]
    [InlineData(50, -223.15, 484.72, -369.67, -73.64, -178.52, 90)]
    [InlineData(60, -213.15, 469.72, -351.67, -70.34, -170.52, 108)]
    [InlineData(70, -203.15, 454.72, -333.67, -67.04, -162.52, 126)]
    [InlineData(80, -193.15, 439.72, -315.67, -63.74, -154.52, 144)]
    [InlineData(90, -183.15, 424.72, -297.67, -60.44, -146.52, 162)]
    [InlineData(100, -173.15, 409.72, -279.67, -57.14, -138.52, 180)]
    [InlineData(110, -163.15, 394.72, -261.67, -53.84, -130.52, 198)]
    [InlineData(120, -153.15, 379.72, -243.67, -50.54, -122.52, 216)]
    [InlineData(130, -143.15, 364.72, -225.67, -47.24, -114.52, 234)]
    [InlineData(140, -133.15, 349.72, -207.67, -43.94, -106.52, 252)]
    [InlineData(150, -123.15, 334.72, -189.67, -40.64, -98.52, 270)]
    [InlineData(160, -113.15, 319.72, -171.67, -37.34, -90.52, 288)]
    [InlineData(170, -103.15, 304.72, -153.67, -34.04, -82.52, 306)]
    [InlineData(180, -93.15, 289.72, -135.67, -30.74, -74.52, 324)]
    [InlineData(190, -83.15, 274.72, -117.67, -27.44, -66.52, 342)]
    [InlineData(200, -73.15, 259.72, -99.67, -24.14, -58.52, 360)]
    [InlineData(210, -63.15, 244.72, -81.67, -20.84, -50.52, 378)]
    [InlineData(220, -53.15, 229.72, -63.67, -17.54, -42.52, 396)]
    [InlineData(230, -43.15, 214.72, -45.67, -14.24, -34.52, 414)]
    [InlineData(240, -33.15, 199.72, -27.67, -10.94, -26.52, 432)]
    [InlineData(250, -23.15, 184.72, -9.67, -7.64, -18.52, 450)]
    [InlineData(260, -13.15, 169.72, 8.33, -4.34, -10.52, 468)]
    [InlineData(270, -3.15, 154.72, 26.33, -1.04, -2.52, 486)]
    [InlineData(280, 6.85, 139.72, 44.33, 2.26, 5.48, 504)]
    [InlineData(290, 16.85, 124.72, 62.33, 5.56, 13.48, 522)]
    [InlineData(300, 26.85, 109.72, 80.33, 8.86, 21.48, 540)]
    [InlineData(310, 36.85, 94.72, 98.33, 12.16, 29.48, 558)]
    [InlineData(320, 46.85, 79.72, 116.33, 15.46, 37.48, 576)]
    [InlineData(330, 56.85, 64.72, 134.33, 18.76, 45.48, 594)]
    [InlineData(340, 66.85, 49.72, 152.33, 22.06, 53.48, 612)]
    [InlineData(350, 76.85, 34.72, 170.33, 25.36, 61.48, 630)]
    [InlineData(360, 86.85, 19.72, 188.33, 28.66, 69.48, 648)]
    [InlineData(370, 96.85, 4.72, 206.33, 31.96, 77.48, 666)]
    [InlineData(380, 106.85, -10.28, 224.33, 35.26, 85.48, 684)]
    [InlineData(390, 116.85, -25.28, 242.33, 38.56, 93.48, 702)]
    [InlineData(400, 126.85, -40.28, 260.33, 41.86, 101.48, 720)]
    [InlineData(410, 136.85, -55.28, 278.33, 45.16, 109.48, 738)]
    [InlineData(420, 146.85, -70.28, 296.33, 48.46, 117.48, 756)]
    [InlineData(430, 156.85, -85.28, 314.33, 51.76, 125.48, 774)]
    [InlineData(440, 166.85, -100.28, 332.33, 55.06, 133.48, 792)]
    [InlineData(450, 176.85, -115.28, 350.33, 58.36, 141.48, 810)]
    [InlineData(460, 186.85, -130.28, 368.33, 61.66, 149.48, 828)]
    [InlineData(470, 196.85, -145.28, 386.33, 64.96, 157.48, 846)]
    [InlineData(480, 206.85, -160.28, 404.33, 68.26, 165.48, 864)]
    [InlineData(490, 216.85, -175.28, 422.33, 71.56, 173.48, 882)]
    [InlineData(500, 226.85, -190.28, 440.33, 74.86, 181.48, 900)]
    [InlineData(510, 236.85, -205.28, 458.33, 78.16, 189.48, 918)]
    [InlineData(520, 246.85, -220.28, 476.33, 81.46, 197.48, 936)]
    [InlineData(530, 256.85, -235.28, 494.33, 84.76, 205.48, 954)]
    [InlineData(540, 266.85, -250.28, 512.33, 88.06, 213.48, 972)]
    [InlineData(550, 276.85, -265.28, 530.33, 91.36, 221.48, 990)]
    [InlineData(560, 286.85, -280.28, 548.33, 94.66, 229.48, 1008)]
    [InlineData(570, 296.85, -295.28, 566.33, 97.96, 237.48, 1026)]
    [InlineData(580, 306.85, -310.28, 584.33, 101.26, 245.48, 1044)]
    [InlineData(590, 316.85, -325.28, 602.33, 104.56, 253.48, 1062)]
    [InlineData(600, 326.85, -340.28, 620.33, 107.86, 261.48, 1080)]
    [InlineData(610, 336.85, -355.28, 638.33, 111.16, 269.48, 1098)]
    [InlineData(620, 346.85, -370.28, 656.33, 114.46, 277.48, 1116)]
    [InlineData(630, 356.85, -385.28, 674.33, 117.76, 285.48, 1134)]
    [InlineData(640, 366.85, -400.28, 692.33, 121.06, 293.48, 1152)]
    [InlineData(650, 376.85, -415.28, 710.33, 124.36, 301.48, 1170)]
    [InlineData(660, 386.85, -430.28, 728.33, 127.66, 309.48, 1188)]
    [InlineData(670, 396.85, -445.28, 746.33, 130.96, 317.48, 1206)]
    [InlineData(680, 406.85, -460.28, 764.33, 134.26, 325.48, 1224)]
    [InlineData(690, 416.85, -475.28, 782.33, 137.56, 333.48, 1242)]
    [InlineData(700, 426.85, -490.28, 800.33, 140.86, 341.48, 1260)]
    [InlineData(710, 436.85, -505.28, 818.33, 144.16, 349.48, 1278)]
    [InlineData(720, 446.85, -520.28, 836.33, 147.46, 357.48, 1296)]
    [InlineData(730, 456.85, -535.28, 854.33, 150.76, 365.48, 1314)]
    [InlineData(740, 466.85, -550.28, 872.33, 154.06, 373.48, 1332)]
    [InlineData(750, 476.85, -565.28, 890.33, 157.36, 381.48, 1350)]
    [InlineData(760, 486.85, -580.28, 908.33, 160.66, 389.48, 1368)]
    [InlineData(770, 496.85, -595.28, 926.33, 163.96, 397.48, 1386)]
    [InlineData(780, 506.85, -610.28, 944.33, 167.26, 405.48, 1404)]
    [InlineData(790, 516.85, -625.28, 962.33, 170.56, 413.48, 1422)]
    [InlineData(800, 526.85, -640.28, 980.33, 173.86, 421.48, 1440)]
    [InlineData(810, 536.85, -655.28, 998.33, 177.16, 429.48, 1458)]
    [InlineData(820, 546.85, -670.28, 1016.33, 180.46, 437.48, 1476)]
    [InlineData(830, 556.85, -685.28, 1034.33, 183.76, 445.48, 1494)]
    [InlineData(840, 566.85, -700.28, 1052.33, 187.06, 453.48, 1512)]
    [InlineData(850, 576.85, -715.28, 1070.33, 190.36, 461.48, 1530)]
    [InlineData(860, 586.85, -730.28, 1088.33, 193.66, 469.48, 1548)]
    [InlineData(870, 596.85, -745.28, 1106.33, 196.96, 477.48, 1566)]
    [InlineData(880, 606.85, -760.28, 1124.33, 200.26, 485.48, 1584)]
    [InlineData(890, 616.85, -775.28, 1142.33, 203.56, 493.48, 1602)]
    [InlineData(900, 626.85, -790.28, 1160.33, 206.86, 501.48, 1620)]
    [InlineData(910, 636.85, -805.28, 1178.33, 210.16, 509.48, 1638)]
    [InlineData(920, 646.85, -820.28, 1196.33, 213.46, 517.48, 1656)]
    [InlineData(930, 656.85, -835.28, 1214.33, 216.76, 525.48, 1674)]
    [InlineData(940, 666.85, -850.28, 1232.33, 220.06, 533.48, 1692)]
    [InlineData(950, 676.85, -865.28, 1250.33, 223.36, 541.48, 1710)]
    [InlineData(960, 686.85, -880.28, 1268.33, 226.66, 549.48, 1728)]
    [InlineData(970, 696.85, -895.28, 1286.33, 229.96, 557.48, 1746)]
    [InlineData(980, 706.85, -910.28, 1304.33, 233.26, 565.48, 1764)]
    [InlineData(990, 716.85, -925.28, 1322.33, 236.56, 573.48, 1782)]
    [InlineData(1000, 726.85, -940.28, 1340.33, 239.86, 581.48, 1800)]
    public void TemperatureFromKelvinShouldProduceTheExpectedConversionResults(
        double kelvin,
        double celsius,
        double delisle,
        double fahrenheit,
        double newton,
        double reaumur,
        double rankine)
    {
        // Arrange / Act
        Temperature<double> temperature = Temperature.FromKelvin(kelvin);

        //Assert
        Assert.Equal(kelvin, Math.Round(temperature.Kelvin, 2));
        Assert.Equal(celsius, Math.Round(temperature.Celsius, 2));
        Assert.Equal(delisle, Math.Round(temperature.Delisle, 2));
        Assert.Equal(fahrenheit, Math.Round(temperature.Fahrenheit, 2));
        Assert.Equal(newton, Math.Round(temperature.Newton, 2));
        Assert.Equal(reaumur, Math.Round(temperature.Reaumur, 2));
        Assert.Equal(rankine, Math.Round(temperature.Rankine, 2));
    }

    [Theory(DisplayName = "Temperature.FromCelsius should produce the expected conversion results")]
    [InlineData(273.15, 0, 150, 32, 0, 0, 491.67)]
    [InlineData(274.15, 1, 148.5, 33.8, 0.33, 0.8, 493.47)]
    [InlineData(275.15, 2, 147, 35.6, 0.66, 1.6, 495.27)]
    [InlineData(276.15, 3, 145.5, 37.4, 0.99, 2.4, 497.07)]
    [InlineData(277.15, 4, 144, 39.2, 1.32, 3.2, 498.87)]
    [InlineData(278.15, 5, 142.5, 41, 1.65, 4, 500.67)]
    [InlineData(279.15, 6, 141, 42.8, 1.98, 4.8, 502.47)]
    [InlineData(280.15, 7, 139.5, 44.6, 2.31, 5.6, 504.27)]
    [InlineData(281.15, 8, 138, 46.4, 2.64, 6.4, 506.07)]
    [InlineData(282.15, 9, 136.5, 48.2, 2.97, 7.2, 507.87)]
    [InlineData(283.15, 10, 135, 50, 3.3, 8, 509.67)]
    [InlineData(293.15, 20, 120, 68, 6.6, 16, 527.67)]
    [InlineData(303.15, 30, 105, 86, 9.9, 24, 545.67)]
    [InlineData(313.15, 40, 90, 104, 13.2, 32, 563.67)]
    [InlineData(323.15, 50, 75, 122, 16.5, 40, 581.67)]
    [InlineData(333.15, 60, 60, 140, 19.8, 48, 599.67)]
    [InlineData(343.15, 70, 45, 158, 23.1, 56, 617.67)]
    [InlineData(353.15, 80, 30, 176, 26.4, 64, 635.67)]
    [InlineData(363.15, 90, 15, 194, 29.7, 72, 653.67)]
    [InlineData(373.15, 100, 0, 212, 33, 80, 671.67)]
    [InlineData(383.15, 110, -15, 230, 36.3, 88, 689.67)]
    [InlineData(393.15, 120, -30, 248, 39.6, 96, 707.67)]
    [InlineData(403.15, 130, -45, 266, 42.9, 104, 725.67)]
    [InlineData(413.15, 140, -60, 284, 46.2, 112, 743.67)]
    [InlineData(423.15, 150, -75, 302, 49.5, 120, 761.67)]
    [InlineData(433.15, 160, -90, 320, 52.8, 128, 779.67)]
    [InlineData(443.15, 170, -105, 338, 56.1, 136, 797.67)]
    [InlineData(453.15, 180, -120, 356, 59.4, 144, 815.67)]
    [InlineData(463.15, 190, -135, 374, 62.7, 152, 833.67)]
    [InlineData(473.15, 200, -150, 392, 66, 160, 851.67)]
    [InlineData(483.15, 210, -165, 410, 69.3, 168, 869.67)]
    [InlineData(493.15, 220, -180, 428, 72.6, 176, 887.67)]
    [InlineData(503.15, 230, -195, 446, 75.9, 184, 905.67)]
    [InlineData(513.15, 240, -210, 464, 79.2, 192, 923.67)]
    [InlineData(523.15, 250, -225, 482, 82.5, 200, 941.67)]
    [InlineData(533.15, 260, -240, 500, 85.8, 208, 959.67)]
    [InlineData(543.15, 270, -255, 518, 89.1, 216, 977.67)]
    [InlineData(553.15, 280, -270, 536, 92.4, 224, 995.67)]
    [InlineData(563.15, 290, -285, 554, 95.7, 232, 1013.67)]
    [InlineData(573.15, 300, -300, 572, 99, 240, 1031.67)]
    [InlineData(583.15, 310, -315, 590, 102.3, 248, 1049.67)]
    [InlineData(593.15, 320, -330, 608, 105.6, 256, 1067.67)]
    [InlineData(603.15, 330, -345, 626, 108.9, 264, 1085.67)]
    [InlineData(613.15, 340, -360, 644, 112.2, 272, 1103.67)]
    [InlineData(623.15, 350, -375, 662, 115.5, 280, 1121.67)]
    [InlineData(633.15, 360, -390, 680, 118.8, 288, 1139.67)]
    [InlineData(643.15, 370, -405, 698, 122.1, 296, 1157.67)]
    [InlineData(653.15, 380, -420, 716, 125.4, 304, 1175.67)]
    [InlineData(663.15, 390, -435, 734, 128.7, 312, 1193.67)]
    [InlineData(673.15, 400, -450, 752, 132, 320, 1211.67)]
    [InlineData(683.15, 410, -465, 770, 135.3, 328, 1229.67)]
    [InlineData(693.15, 420, -480, 788, 138.6, 336, 1247.67)]
    [InlineData(703.15, 430, -495, 806, 141.9, 344, 1265.67)]
    [InlineData(713.15, 440, -510, 824, 145.2, 352, 1283.67)]
    [InlineData(723.15, 450, -525, 842, 148.5, 360, 1301.67)]
    [InlineData(733.15, 460, -540, 860, 151.8, 368, 1319.67)]
    [InlineData(743.15, 470, -555, 878, 155.1, 376, 1337.67)]
    [InlineData(753.15, 480, -570, 896, 158.4, 384, 1355.67)]
    [InlineData(763.15, 490, -585, 914, 161.7, 392, 1373.67)]
    [InlineData(773.15, 500, -600, 932, 165, 400, 1391.67)]
    [InlineData(783.15, 510, -615, 950, 168.3, 408, 1409.67)]
    [InlineData(793.15, 520, -630, 968, 171.6, 416, 1427.67)]
    [InlineData(803.15, 530, -645, 986, 174.9, 424, 1445.67)]
    [InlineData(813.15, 540, -660, 1004, 178.2, 432, 1463.67)]
    [InlineData(823.15, 550, -675, 1022, 181.5, 440, 1481.67)]
    [InlineData(833.15, 560, -690, 1040, 184.8, 448, 1499.67)]
    [InlineData(843.15, 570, -705, 1058, 188.1, 456, 1517.67)]
    [InlineData(853.15, 580, -720, 1076, 191.4, 464, 1535.67)]
    [InlineData(863.15, 590, -735, 1094, 194.7, 472, 1553.67)]
    [InlineData(873.15, 600, -750, 1112, 198, 480, 1571.67)]
    [InlineData(883.15, 610, -765, 1130, 201.3, 488, 1589.67)]
    [InlineData(893.15, 620, -780, 1148, 204.6, 496, 1607.67)]
    [InlineData(903.15, 630, -795, 1166, 207.9, 504, 1625.67)]
    [InlineData(913.15, 640, -810, 1184, 211.2, 512, 1643.67)]
    [InlineData(923.15, 650, -825, 1202, 214.5, 520, 1661.67)]
    [InlineData(933.15, 660, -840, 1220, 217.8, 528, 1679.67)]
    [InlineData(943.15, 670, -855, 1238, 221.1, 536, 1697.67)]
    [InlineData(953.15, 680, -870, 1256, 224.4, 544, 1715.67)]
    [InlineData(963.15, 690, -885, 1274, 227.7, 552, 1733.67)]
    [InlineData(973.15, 700, -900, 1292, 231, 560, 1751.67)]
    [InlineData(983.15, 710, -915, 1310, 234.3, 568, 1769.67)]
    [InlineData(993.15, 720, -930, 1328, 237.6, 576, 1787.67)]
    [InlineData(1003.15, 730, -945, 1346, 240.9, 584, 1805.67)]
    [InlineData(1013.15, 740, -960, 1364, 244.2, 592, 1823.67)]
    [InlineData(1023.15, 750, -975, 1382, 247.5, 600, 1841.67)]
    [InlineData(1033.15, 760, -990, 1400, 250.8, 608, 1859.67)]
    [InlineData(1043.15, 770, -1005, 1418, 254.1, 616, 1877.67)]
    [InlineData(1053.15, 780, -1020, 1436, 257.4, 624, 1895.67)]
    [InlineData(1063.15, 790, -1035, 1454, 260.7, 632, 1913.67)]
    [InlineData(1073.15, 800, -1050, 1472, 264, 640, 1931.67)]
    [InlineData(1083.15, 810, -1065, 1490, 267.3, 648, 1949.67)]
    [InlineData(1093.15, 820, -1080, 1508, 270.6, 656, 1967.67)]
    [InlineData(1103.15, 830, -1095, 1526, 273.9, 664, 1985.67)]
    [InlineData(1113.15, 840, -1110, 1544, 277.2, 672, 2003.67)]
    [InlineData(1123.15, 850, -1125, 1562, 280.5, 680, 2021.67)]
    [InlineData(1133.15, 860, -1140, 1580, 283.8, 688, 2039.67)]
    [InlineData(1143.15, 870, -1155, 1598, 287.1, 696, 2057.67)]
    [InlineData(1153.15, 880, -1170, 1616, 290.4, 704, 2075.67)]
    [InlineData(1163.15, 890, -1185, 1634, 293.7, 712, 2093.67)]
    [InlineData(1173.15, 900, -1200, 1652, 297, 720, 2111.67)]
    [InlineData(1183.15, 910, -1215, 1670, 300.3, 728, 2129.67)]
    [InlineData(1193.15, 920, -1230, 1688, 303.6, 736, 2147.67)]
    [InlineData(1203.15, 930, -1245, 1706, 306.9, 744, 2165.67)]
    [InlineData(1213.15, 940, -1260, 1724, 310.2, 752, 2183.67)]
    [InlineData(1223.15, 950, -1275, 1742, 313.5, 760, 2201.67)]
    [InlineData(1233.15, 960, -1290, 1760, 316.8, 768, 2219.67)]
    [InlineData(1243.15, 970, -1305, 1778, 320.1, 776, 2237.67)]
    [InlineData(1253.15, 980, -1320, 1796, 323.4, 784, 2255.67)]
    [InlineData(1263.15, 990, -1335, 1814, 326.7, 792, 2273.67)]
    [InlineData(1273.15, 1000, -1350, 1832, 330, 800, 2291.67)]
    public void TemperatureFromCelsiusShouldProduceTheExpectedConversionResults(
        double kelvin,
        double celsius,
        double delisle,
        double fahrenheit,
        double newton,
        double reaumur,
        double rankine)
    {
        // Arrange / Act
        Temperature<double> temperature = Temperature.FromCelsius(celsius);

        //Assert
        Assert.Equal(kelvin, Math.Round(temperature.Kelvin, 2));
        Assert.Equal(celsius, Math.Round(temperature.Celsius, 2));
        Assert.Equal(delisle, Math.Round(temperature.Delisle, 2));
        Assert.Equal(fahrenheit, Math.Round(temperature.Fahrenheit, 2));
        Assert.Equal(newton, Math.Round(temperature.Newton, 2));
        Assert.Equal(reaumur, Math.Round(temperature.Reaumur, 2));
        Assert.Equal(rankine, Math.Round(temperature.Rankine, 2));
    }

    [Theory(DisplayName = "Temperature.FromDelisle should produce the expected conversion results")]
    [InlineData(373.15, 100, 0, 212, 33, 80, 671.67)]
    [InlineData(372.48, 99.33, 1, 210.8, 32.78, 79.47, 670.47)]
    [InlineData(371.82, 98.67, 2, 209.6, 32.56, 78.93, 669.27)]
    [InlineData(371.15, 98, 3, 208.4, 32.34, 78.4, 668.07)]
    [InlineData(370.48, 97.33, 4, 207.2, 32.12, 77.87, 666.87)]
    [InlineData(369.82, 96.67, 5, 206, 31.9, 77.33, 665.67)]
    [InlineData(369.15, 96, 6, 204.8, 31.68, 76.8, 664.47)]
    [InlineData(368.48, 95.33, 7, 203.6, 31.46, 76.27, 663.27)]
    [InlineData(367.82, 94.67, 8, 202.4, 31.24, 75.73, 662.07)]
    [InlineData(367.15, 94, 9, 201.2, 31.02, 75.2, 660.87)]
    [InlineData(366.48, 93.33, 10, 200, 30.8, 74.67, 659.67)]
    [InlineData(359.82, 86.67, 20, 188, 28.6, 69.33, 647.67)]
    [InlineData(353.15, 80, 30, 176, 26.4, 64, 635.67)]
    [InlineData(346.48, 73.33, 40, 164, 24.2, 58.67, 623.67)]
    [InlineData(339.82, 66.67, 50, 152, 22, 53.33, 611.67)]
    [InlineData(333.15, 60, 60, 140, 19.8, 48, 599.67)]
    [InlineData(326.48, 53.33, 70, 128, 17.6, 42.67, 587.67)]
    [InlineData(319.82, 46.67, 80, 116, 15.4, 37.33, 575.67)]
    [InlineData(313.15, 40, 90, 104, 13.2, 32, 563.67)]
    [InlineData(306.48, 33.33, 100, 92, 11, 26.67, 551.67)]
    [InlineData(299.82, 26.67, 110, 80, 8.8, 21.33, 539.67)]
    [InlineData(293.15, 20, 120, 68, 6.6, 16, 527.67)]
    [InlineData(286.48, 13.33, 130, 56, 4.4, 10.67, 515.67)]
    [InlineData(279.82, 6.67, 140, 44, 2.2, 5.33, 503.67)]
    [InlineData(273.15, 0, 150, 32, 0, 0, 491.67)]
    [InlineData(266.48, -6.67, 160, 20, -2.2, -5.33, 479.67)]
    [InlineData(259.82, -13.33, 170, 8, -4.4, -10.67, 467.67)]
    [InlineData(253.15, -20, 180, -4, -6.6, -16, 455.67)]
    [InlineData(246.48, -26.67, 190, -16, -8.8, -21.33, 443.67)]
    [InlineData(239.82, -33.33, 200, -28, -11, -26.67, 431.67)]
    [InlineData(233.15, -40, 210, -40, -13.2, -32, 419.67)]
    [InlineData(226.48, -46.67, 220, -52, -15.4, -37.33, 407.67)]
    [InlineData(219.82, -53.33, 230, -64, -17.6, -42.67, 395.67)]
    [InlineData(213.15, -60, 240, -76, -19.8, -48, 383.67)]
    [InlineData(206.48, -66.67, 250, -88, -22, -53.33, 371.67)]
    [InlineData(199.82, -73.33, 260, -100, -24.2, -58.67, 359.67)]
    [InlineData(193.15, -80, 270, -112, -26.4, -64, 347.67)]
    [InlineData(186.48, -86.67, 280, -124, -28.6, -69.33, 335.67)]
    [InlineData(179.82, -93.33, 290, -136, -30.8, -74.67, 323.67)]
    [InlineData(173.15, -100, 300, -148, -33, -80, 311.67)]
    [InlineData(166.48, -106.67, 310, -160, -35.2, -85.33, 299.67)]
    [InlineData(159.82, -113.33, 320, -172, -37.4, -90.67, 287.67)]
    [InlineData(153.15, -120, 330, -184, -39.6, -96, 275.67)]
    [InlineData(146.48, -126.67, 340, -196, -41.8, -101.33, 263.67)]
    [InlineData(139.82, -133.33, 350, -208, -44, -106.67, 251.67)]
    [InlineData(133.15, -140, 360, -220, -46.2, -112, 239.67)]
    [InlineData(126.48, -146.67, 370, -232, -48.4, -117.33, 227.67)]
    [InlineData(119.82, -153.33, 380, -244, -50.6, -122.67, 215.67)]
    [InlineData(113.15, -160, 390, -256, -52.8, -128, 203.67)]
    [InlineData(106.48, -166.67, 400, -268, -55, -133.33, 191.67)]
    [InlineData(99.82, -173.33, 410, -280, -57.2, -138.67, 179.67)]
    [InlineData(93.15, -180, 420, -292, -59.4, -144, 167.67)]
    [InlineData(86.48, -186.67, 430, -304, -61.6, -149.33, 155.67)]
    [InlineData(79.82, -193.33, 440, -316, -63.8, -154.67, 143.67)]
    [InlineData(73.15, -200, 450, -328, -66, -160, 131.67)]
    [InlineData(66.48, -206.67, 460, -340, -68.2, -165.33, 119.67)]
    [InlineData(59.82, -213.33, 470, -352, -70.4, -170.67, 107.67)]
    [InlineData(53.15, -220, 480, -364, -72.6, -176, 95.67)]
    [InlineData(46.48, -226.67, 490, -376, -74.8, -181.33, 83.67)]
    [InlineData(39.82, -233.33, 500, -388, -77, -186.67, 71.67)]
    [InlineData(33.15, -240, 510, -400, -79.2, -192, 59.67)]
    [InlineData(26.48, -246.67, 520, -412, -81.4, -197.33, 47.67)]
    [InlineData(19.82, -253.33, 530, -424, -83.6, -202.67, 35.67)]
    [InlineData(13.15, -260, 540, -436, -85.8, -208, 23.67)]
    [InlineData(6.48, -266.67, 550, -448, -88, -213.33, 11.67)]
    [InlineData(-0.18, -273.33, 560, -460, -90.2, -218.67, -0.33)]
    [InlineData(-6.85, -280, 570, -472, -92.4, -224, -12.33)]
    [InlineData(-13.52, -286.67, 580, -484, -94.6, -229.33, -24.33)]
    [InlineData(-20.18, -293.33, 590, -496, -96.8, -234.67, -36.33)]
    [InlineData(-26.85, -300, 600, -508, -99, -240, -48.33)]
    [InlineData(-33.52, -306.67, 610, -520, -101.2, -245.33, -60.33)]
    [InlineData(-40.18, -313.33, 620, -532, -103.4, -250.67, -72.33)]
    [InlineData(-46.85, -320, 630, -544, -105.6, -256, -84.33)]
    [InlineData(-53.52, -326.67, 640, -556, -107.8, -261.33, -96.33)]
    [InlineData(-60.18, -333.33, 650, -568, -110, -266.67, -108.33)]
    [InlineData(-66.85, -340, 660, -580, -112.2, -272, -120.33)]
    [InlineData(-73.52, -346.67, 670, -592, -114.4, -277.33, -132.33)]
    [InlineData(-80.18, -353.33, 680, -604, -116.6, -282.67, -144.33)]
    [InlineData(-86.85, -360, 690, -616, -118.8, -288, -156.33)]
    [InlineData(-93.52, -366.67, 700, -628, -121, -293.33, -168.33)]
    [InlineData(-100.18, -373.33, 710, -640, -123.2, -298.67, -180.33)]
    [InlineData(-106.85, -380, 720, -652, -125.4, -304, -192.33)]
    [InlineData(-113.52, -386.67, 730, -664, -127.6, -309.33, -204.33)]
    [InlineData(-120.18, -393.33, 740, -676, -129.8, -314.67, -216.33)]
    [InlineData(-126.85, -400, 750, -688, -132, -320, -228.33)]
    [InlineData(-133.52, -406.67, 760, -700, -134.2, -325.33, -240.33)]
    [InlineData(-140.18, -413.33, 770, -712, -136.4, -330.67, -252.33)]
    [InlineData(-146.85, -420, 780, -724, -138.6, -336, -264.33)]
    [InlineData(-153.52, -426.67, 790, -736, -140.8, -341.33, -276.33)]
    [InlineData(-160.18, -433.33, 800, -748, -143, -346.67, -288.33)]
    [InlineData(-166.85, -440, 810, -760, -145.2, -352, -300.33)]
    [InlineData(-173.52, -446.67, 820, -772, -147.4, -357.33, -312.33)]
    [InlineData(-180.18, -453.33, 830, -784, -149.6, -362.67, -324.33)]
    [InlineData(-186.85, -460, 840, -796, -151.8, -368, -336.33)]
    [InlineData(-193.52, -466.67, 850, -808, -154, -373.33, -348.33)]
    [InlineData(-200.18, -473.33, 860, -820, -156.2, -378.67, -360.33)]
    [InlineData(-206.85, -480, 870, -832, -158.4, -384, -372.33)]
    [InlineData(-213.52, -486.67, 880, -844, -160.6, -389.33, -384.33)]
    [InlineData(-220.18, -493.33, 890, -856, -162.8, -394.67, -396.33)]
    [InlineData(-226.85, -500, 900, -868, -165, -400, -408.33)]
    [InlineData(-233.52, -506.67, 910, -880, -167.2, -405.33, -420.33)]
    [InlineData(-240.18, -513.33, 920, -892, -169.4, -410.67, -432.33)]
    [InlineData(-246.85, -520, 930, -904, -171.6, -416, -444.33)]
    [InlineData(-253.52, -526.67, 940, -916, -173.8, -421.33, -456.33)]
    [InlineData(-260.18, -533.33, 950, -928, -176, -426.67, -468.33)]
    [InlineData(-266.85, -540, 960, -940, -178.2, -432, -480.33)]
    [InlineData(-273.52, -546.67, 970, -952, -180.4, -437.33, -492.33)]
    [InlineData(-280.18, -553.33, 980, -964, -182.6, -442.67, -504.33)]
    [InlineData(-286.85, -560, 990, -976, -184.8, -448, -516.33)]
    [InlineData(-293.52, -566.67, 1000, -988, -187, -453.33, -528.33)]
    public void TemperatureFromDelisleShouldProduceTheExpectedConversionResults(
        double kelvin,
        double celsius,
        double delisle,
        double fahrenheit,
        double newton,
        double reaumur,
        double rankine)
    {
        // Arrange / Act
        Temperature<double> temperature = Temperature.FromDelisle(delisle);

        //Assert
        Assert.Equal(kelvin, Math.Round(temperature.Kelvin, 2));
        Assert.Equal(celsius, Math.Round(temperature.Celsius, 2));
        Assert.Equal(delisle, Math.Round(temperature.Delisle, 2));
        Assert.Equal(fahrenheit, Math.Round(temperature.Fahrenheit, 2));
        Assert.Equal(newton, Math.Round(temperature.Newton, 2));
        Assert.Equal(reaumur, Math.Round(temperature.Reaumur, 2));
        Assert.Equal(rankine, Math.Round(temperature.Rankine, 2));
    }

    [Theory(DisplayName = "Temperature.FromFahrenheit should produce the expected conversion results")]
    [InlineData(255.37, -17.78, 176.67, -0, -5.87, -14.22, 459.67)]
    [InlineData(255.93, -17.22, 175.83, 1, -5.68, -13.78, 460.67)]
    [InlineData(256.48, -16.67, 175, 2, -5.5, -13.33, 461.67)]
    [InlineData(257.04, -16.11, 174.17, 3, -5.32, -12.89, 462.67)]
    [InlineData(257.59, -15.56, 173.33, 4, -5.13, -12.44, 463.67)]
    [InlineData(258.15, -15, 172.5, 5, -4.95, -12, 464.67)]
    [InlineData(258.71, -14.44, 171.67, 6, -4.77, -11.56, 465.67)]
    [InlineData(259.26, -13.89, 170.83, 7, -4.58, -11.11, 466.67)]
    [InlineData(259.82, -13.33, 170, 8, -4.4, -10.67, 467.67)]
    [InlineData(260.37, -12.78, 169.17, 9, -4.22, -10.22, 468.67)]
    [InlineData(260.93, -12.22, 168.33, 10, -4.03, -9.78, 469.67)]
    [InlineData(266.48, -6.67, 160, 20, -2.2, -5.33, 479.67)]
    [InlineData(272.04, -1.11, 151.67, 30, -0.37, -0.89, 489.67)]
    [InlineData(277.59, 4.44, 143.33, 40, 1.47, 3.56, 499.67)]
    [InlineData(283.15, 10, 135, 50, 3.3, 8, 509.67)]
    [InlineData(288.71, 15.56, 126.67, 60, 5.13, 12.44, 519.67)]
    [InlineData(294.26, 21.11, 118.33, 70, 6.97, 16.89, 529.67)]
    [InlineData(299.82, 26.67, 110, 80, 8.8, 21.33, 539.67)]
    [InlineData(305.37, 32.22, 101.67, 90, 10.63, 25.78, 549.67)]
    [InlineData(310.93, 37.78, 93.33, 100, 12.47, 30.22, 559.67)]
    [InlineData(316.48, 43.33, 85, 110, 14.3, 34.67, 569.67)]
    [InlineData(322.04, 48.89, 76.67, 120, 16.13, 39.11, 579.67)]
    [InlineData(327.59, 54.44, 68.33, 130, 17.97, 43.56, 589.67)]
    [InlineData(333.15, 60, 60, 140, 19.8, 48, 599.67)]
    [InlineData(338.71, 65.56, 51.67, 150, 21.63, 52.44, 609.67)]
    [InlineData(344.26, 71.11, 43.33, 160, 23.47, 56.89, 619.67)]
    [InlineData(349.82, 76.67, 35, 170, 25.3, 61.33, 629.67)]
    [InlineData(355.37, 82.22, 26.67, 180, 27.13, 65.78, 639.67)]
    [InlineData(360.93, 87.78, 18.33, 190, 28.97, 70.22, 649.67)]
    [InlineData(366.48, 93.33, 10, 200, 30.8, 74.67, 659.67)]
    [InlineData(372.04, 98.89, 1.67, 210, 32.63, 79.11, 669.67)]
    [InlineData(377.59, 104.44, -6.67, 220, 34.47, 83.56, 679.67)]
    [InlineData(383.15, 110, -15, 230, 36.3, 88, 689.67)]
    [InlineData(388.71, 115.56, -23.33, 240, 38.13, 92.44, 699.67)]
    [InlineData(394.26, 121.11, -31.67, 250, 39.97, 96.89, 709.67)]
    [InlineData(399.82, 126.67, -40, 260, 41.8, 101.33, 719.67)]
    [InlineData(405.37, 132.22, -48.33, 270, 43.63, 105.78, 729.67)]
    [InlineData(410.93, 137.78, -56.67, 280, 45.47, 110.22, 739.67)]
    [InlineData(416.48, 143.33, -65, 290, 47.3, 114.67, 749.67)]
    [InlineData(422.04, 148.89, -73.33, 300, 49.13, 119.11, 759.67)]
    [InlineData(427.59, 154.44, -81.67, 310, 50.97, 123.56, 769.67)]
    [InlineData(433.15, 160, -90, 320, 52.8, 128, 779.67)]
    [InlineData(438.71, 165.56, -98.33, 330, 54.63, 132.44, 789.67)]
    [InlineData(444.26, 171.11, -106.67, 340, 56.47, 136.89, 799.67)]
    [InlineData(449.82, 176.67, -115, 350, 58.3, 141.33, 809.67)]
    [InlineData(455.37, 182.22, -123.33, 360, 60.13, 145.78, 819.67)]
    [InlineData(460.93, 187.78, -131.67, 370, 61.97, 150.22, 829.67)]
    [InlineData(466.48, 193.33, -140, 380, 63.8, 154.67, 839.67)]
    [InlineData(472.04, 198.89, -148.33, 390, 65.63, 159.11, 849.67)]
    [InlineData(477.59, 204.44, -156.67, 400, 67.47, 163.56, 859.67)]
    [InlineData(483.15, 210, -165, 410, 69.3, 168, 869.67)]
    [InlineData(488.71, 215.56, -173.33, 420, 71.13, 172.44, 879.67)]
    [InlineData(494.26, 221.11, -181.67, 430, 72.97, 176.89, 889.67)]
    [InlineData(499.82, 226.67, -190, 440, 74.8, 181.33, 899.67)]
    [InlineData(505.37, 232.22, -198.33, 450, 76.63, 185.78, 909.67)]
    [InlineData(510.93, 237.78, -206.67, 460, 78.47, 190.22, 919.67)]
    [InlineData(516.48, 243.33, -215, 470, 80.3, 194.67, 929.67)]
    [InlineData(522.04, 248.89, -223.33, 480, 82.13, 199.11, 939.67)]
    [InlineData(527.59, 254.44, -231.67, 490, 83.97, 203.56, 949.67)]
    [InlineData(533.15, 260, -240, 500, 85.8, 208, 959.67)]
    [InlineData(538.71, 265.56, -248.33, 510, 87.63, 212.44, 969.67)]
    [InlineData(544.26, 271.11, -256.67, 520, 89.47, 216.89, 979.67)]
    [InlineData(549.82, 276.67, -265, 530, 91.3, 221.33, 989.67)]
    [InlineData(555.37, 282.22, -273.33, 540, 93.13, 225.78, 999.67)]
    [InlineData(560.93, 287.78, -281.67, 550, 94.97, 230.22, 1009.67)]
    [InlineData(566.48, 293.33, -290, 560, 96.8, 234.67, 1019.67)]
    [InlineData(572.04, 298.89, -298.33, 570, 98.63, 239.11, 1029.67)]
    [InlineData(577.59, 304.44, -306.67, 580, 100.47, 243.56, 1039.67)]
    [InlineData(583.15, 310, -315, 590, 102.3, 248, 1049.67)]
    [InlineData(588.71, 315.56, -323.33, 600, 104.13, 252.44, 1059.67)]
    [InlineData(594.26, 321.11, -331.67, 610, 105.97, 256.89, 1069.67)]
    [InlineData(599.82, 326.67, -340, 620, 107.8, 261.33, 1079.67)]
    [InlineData(605.37, 332.22, -348.33, 630, 109.63, 265.78, 1089.67)]
    [InlineData(610.93, 337.78, -356.67, 640, 111.47, 270.22, 1099.67)]
    [InlineData(616.48, 343.33, -365, 650, 113.3, 274.67, 1109.67)]
    [InlineData(622.04, 348.89, -373.33, 660, 115.13, 279.11, 1119.67)]
    [InlineData(627.59, 354.44, -381.67, 670, 116.97, 283.56, 1129.67)]
    [InlineData(633.15, 360, -390, 680, 118.8, 288, 1139.67)]
    [InlineData(638.71, 365.56, -398.33, 690, 120.63, 292.44, 1149.67)]
    [InlineData(644.26, 371.11, -406.67, 700, 122.47, 296.89, 1159.67)]
    [InlineData(649.82, 376.67, -415, 710, 124.3, 301.33, 1169.67)]
    [InlineData(655.37, 382.22, -423.33, 720, 126.13, 305.78, 1179.67)]
    [InlineData(660.93, 387.78, -431.67, 730, 127.97, 310.22, 1189.67)]
    [InlineData(666.48, 393.33, -440, 740, 129.8, 314.67, 1199.67)]
    [InlineData(672.04, 398.89, -448.33, 750, 131.63, 319.11, 1209.67)]
    [InlineData(677.59, 404.44, -456.67, 760, 133.47, 323.56, 1219.67)]
    [InlineData(683.15, 410, -465, 770, 135.3, 328, 1229.67)]
    [InlineData(688.71, 415.56, -473.33, 780, 137.13, 332.44, 1239.67)]
    [InlineData(694.26, 421.11, -481.67, 790, 138.97, 336.89, 1249.67)]
    [InlineData(699.82, 426.67, -490, 800, 140.8, 341.33, 1259.67)]
    [InlineData(705.37, 432.22, -498.33, 810, 142.63, 345.78, 1269.67)]
    [InlineData(710.93, 437.78, -506.67, 820, 144.47, 350.22, 1279.67)]
    [InlineData(716.48, 443.33, -515, 830, 146.3, 354.67, 1289.67)]
    [InlineData(722.04, 448.89, -523.33, 840, 148.13, 359.11, 1299.67)]
    [InlineData(727.59, 454.44, -531.67, 850, 149.97, 363.56, 1309.67)]
    [InlineData(733.15, 460, -540, 860, 151.8, 368, 1319.67)]
    [InlineData(738.71, 465.56, -548.33, 870, 153.63, 372.44, 1329.67)]
    [InlineData(744.26, 471.11, -556.67, 880, 155.47, 376.89, 1339.67)]
    [InlineData(749.82, 476.67, -565, 890, 157.3, 381.33, 1349.67)]
    [InlineData(755.37, 482.22, -573.33, 900, 159.13, 385.78, 1359.67)]
    [InlineData(760.93, 487.78, -581.67, 910, 160.97, 390.22, 1369.67)]
    [InlineData(766.48, 493.33, -590, 920, 162.8, 394.67, 1379.67)]
    [InlineData(772.04, 498.89, -598.33, 930, 164.63, 399.11, 1389.67)]
    [InlineData(777.59, 504.44, -606.67, 940, 166.47, 403.56, 1399.67)]
    [InlineData(783.15, 510, -615, 950, 168.3, 408, 1409.67)]
    [InlineData(788.71, 515.56, -623.33, 960, 170.13, 412.44, 1419.67)]
    [InlineData(794.26, 521.11, -631.67, 970, 171.97, 416.89, 1429.67)]
    [InlineData(799.82, 526.67, -640, 980, 173.8, 421.33, 1439.67)]
    [InlineData(805.37, 532.22, -648.33, 990, 175.63, 425.78, 1449.67)]
    [InlineData(810.93, 537.78, -656.67, 1000, 177.47, 430.22, 1459.67)]
    public void TemperatureFromFahrenheitShouldProduceTheExpectedConversionResults(
        double kelvin,
        double celsius,
        double delisle,
        double fahrenheit,
        double newton,
        double reaumur,
        double rankine)
    {
        // Arrange / Act
        Temperature<double> temperature = Temperature.FromFahrenheit(fahrenheit);

        //Assert
        Assert.Equal(kelvin, Math.Round(temperature.Kelvin, 2));
        Assert.Equal(celsius, Math.Round(temperature.Celsius, 2));
        Assert.Equal(delisle, Math.Round(temperature.Delisle, 2));
        Assert.Equal(fahrenheit, Math.Round(temperature.Fahrenheit, 2));
        Assert.Equal(newton, Math.Round(temperature.Newton, 2));
        Assert.Equal(reaumur, Math.Round(temperature.Reaumur, 2));
        Assert.Equal(rankine, Math.Round(temperature.Rankine, 2));
    }

    [Theory(DisplayName = "Temperature.FromNewton should produce the expected conversion results")]
    [InlineData(273.15, 0, 150, 32, 0, 0, 491.67)]
    [InlineData(276.18, 3.03, 145.45, 37.45, 1, 2.42, 497.12)]
    [InlineData(279.21, 6.06, 140.91, 42.91, 2, 4.85, 502.58)]
    [InlineData(282.24, 9.09, 136.36, 48.36, 3, 7.27, 508.03)]
    [InlineData(285.27, 12.12, 131.82, 53.82, 4, 9.7, 513.49)]
    [InlineData(288.3, 15.15, 127.27, 59.27, 5, 12.12, 518.94)]
    [InlineData(291.33, 18.18, 122.73, 64.73, 6, 14.55, 524.4)]
    [InlineData(294.36, 21.21, 118.18, 70.18, 7, 16.97, 529.85)]
    [InlineData(297.39, 24.24, 113.64, 75.64, 8, 19.39, 535.31)]
    [InlineData(300.42, 27.27, 109.09, 81.09, 9, 21.82, 540.76)]
    [InlineData(303.45, 30.3, 104.55, 86.55, 10, 24.24, 546.22)]
    [InlineData(333.76, 60.61, 59.09, 141.09, 20, 48.48, 600.76)]
    [InlineData(364.06, 90.91, 13.64, 195.64, 30, 72.73, 655.31)]
    [InlineData(394.36, 121.21, -31.82, 250.18, 40, 96.97, 709.85)]
    [InlineData(424.67, 151.52, -77.27, 304.73, 50, 121.21, 764.4)]
    [InlineData(454.97, 181.82, -122.73, 359.27, 60, 145.45, 818.94)]
    [InlineData(485.27, 212.12, -168.18, 413.82, 70, 169.7, 873.49)]
    [InlineData(515.57, 242.42, -213.64, 468.36, 80, 193.94, 928.03)]
    [InlineData(545.88, 272.73, -259.09, 522.91, 90, 218.18, 982.58)]
    [InlineData(576.18, 303.03, -304.55, 577.45, 100, 242.42, 1037.12)]
    [InlineData(606.48, 333.33, -350, 632, 110, 266.67, 1091.67)]
    [InlineData(636.79, 363.64, -395.45, 686.55, 120, 290.91, 1146.22)]
    [InlineData(667.09, 393.94, -440.91, 741.09, 130, 315.15, 1200.76)]
    [InlineData(697.39, 424.24, -486.36, 795.64, 140, 339.39, 1255.31)]
    [InlineData(727.7, 454.55, -531.82, 850.18, 150, 363.64, 1309.85)]
    [InlineData(758, 484.85, -577.27, 904.73, 160, 387.88, 1364.4)]
    [InlineData(788.3, 515.15, -622.73, 959.27, 170, 412.12, 1418.94)]
    [InlineData(818.6, 545.45, -668.18, 1013.82, 180, 436.36, 1473.49)]
    [InlineData(848.91, 575.76, -713.64, 1068.36, 190, 460.61, 1528.03)]
    [InlineData(879.21, 606.06, -759.09, 1122.91, 200, 484.85, 1582.58)]
    [InlineData(909.51, 636.36, -804.55, 1177.45, 210, 509.09, 1637.12)]
    [InlineData(939.82, 666.67, -850, 1232, 220, 533.33, 1691.67)]
    [InlineData(970.12, 696.97, -895.45, 1286.55, 230, 557.58, 1746.22)]
    [InlineData(1000.42, 727.27, -940.91, 1341.09, 240, 581.82, 1800.76)]
    [InlineData(1030.73, 757.58, -986.36, 1395.64, 250, 606.06, 1855.31)]
    [InlineData(1061.03, 787.88, -1031.82, 1450.18, 260, 630.3, 1909.85)]
    [InlineData(1091.33, 818.18, -1077.27, 1504.73, 270, 654.55, 1964.4)]
    [InlineData(1121.63, 848.48, -1122.73, 1559.27, 280, 678.79, 2018.94)]
    [InlineData(1151.94, 878.79, -1168.18, 1613.82, 290, 703.03, 2073.49)]
    [InlineData(1182.24, 909.09, -1213.64, 1668.36, 300, 727.27, 2128.03)]
    [InlineData(1212.54, 939.39, -1259.09, 1722.91, 310, 751.52, 2182.58)]
    [InlineData(1242.85, 969.7, -1304.55, 1777.45, 320, 775.76, 2237.12)]
    [InlineData(1273.15, 1000, -1350, 1832, 330, 800, 2291.67)]
    [InlineData(1303.45, 1030.3, -1395.45, 1886.55, 340, 824.24, 2346.22)]
    [InlineData(1333.76, 1060.61, -1440.91, 1941.09, 350, 848.48, 2400.76)]
    [InlineData(1364.06, 1090.91, -1486.36, 1995.64, 360, 872.73, 2455.31)]
    [InlineData(1394.36, 1121.21, -1531.82, 2050.18, 370, 896.97, 2509.85)]
    [InlineData(1424.67, 1151.52, -1577.27, 2104.73, 380, 921.21, 2564.4)]
    [InlineData(1454.97, 1181.82, -1622.73, 2159.27, 390, 945.45, 2618.94)]
    [InlineData(1485.27, 1212.12, -1668.18, 2213.82, 400, 969.7, 2673.49)]
    [InlineData(1515.57, 1242.42, -1713.64, 2268.36, 410, 993.94, 2728.03)]
    [InlineData(1545.88, 1272.73, -1759.09, 2322.91, 420, 1018.18, 2782.58)]
    [InlineData(1576.18, 1303.03, -1804.55, 2377.45, 430, 1042.42, 2837.12)]
    [InlineData(1606.48, 1333.33, -1850, 2432, 440, 1066.67, 2891.67)]
    [InlineData(1636.79, 1363.64, -1895.45, 2486.55, 450, 1090.91, 2946.22)]
    [InlineData(1667.09, 1393.94, -1940.91, 2541.09, 460, 1115.15, 3000.76)]
    [InlineData(1697.39, 1424.24, -1986.36, 2595.64, 470, 1139.39, 3055.31)]
    [InlineData(1727.7, 1454.55, -2031.82, 2650.18, 480, 1163.64, 3109.85)]
    [InlineData(1758, 1484.85, -2077.27, 2704.73, 490, 1187.88, 3164.4)]
    [InlineData(1788.3, 1515.15, -2122.73, 2759.27, 500, 1212.12, 3218.94)]
    [InlineData(1818.6, 1545.45, -2168.18, 2813.82, 510, 1236.36, 3273.49)]
    [InlineData(1848.91, 1575.76, -2213.64, 2868.36, 520, 1260.61, 3328.03)]
    [InlineData(1879.21, 1606.06, -2259.09, 2922.91, 530, 1284.85, 3382.58)]
    [InlineData(1909.51, 1636.36, -2304.55, 2977.45, 540, 1309.09, 3437.12)]
    [InlineData(1939.82, 1666.67, -2350, 3032, 550, 1333.33, 3491.67)]
    [InlineData(1970.12, 1696.97, -2395.45, 3086.55, 560, 1357.58, 3546.22)]
    [InlineData(2000.42, 1727.27, -2440.91, 3141.09, 570, 1381.82, 3600.76)]
    [InlineData(2030.73, 1757.58, -2486.36, 3195.64, 580, 1406.06, 3655.31)]
    [InlineData(2061.03, 1787.88, -2531.82, 3250.18, 590, 1430.3, 3709.85)]
    [InlineData(2091.33, 1818.18, -2577.27, 3304.73, 600, 1454.55, 3764.4)]
    [InlineData(2121.63, 1848.48, -2622.73, 3359.27, 610, 1478.79, 3818.94)]
    [InlineData(2151.94, 1878.79, -2668.18, 3413.82, 620, 1503.03, 3873.49)]
    [InlineData(2182.24, 1909.09, -2713.64, 3468.36, 630, 1527.27, 3928.03)]
    [InlineData(2212.54, 1939.39, -2759.09, 3522.91, 640, 1551.52, 3982.58)]
    [InlineData(2242.85, 1969.7, -2804.55, 3577.45, 650, 1575.76, 4037.12)]
    [InlineData(2273.15, 2000, -2850, 3632, 660, 1600, 4091.67)]
    [InlineData(2303.45, 2030.3, -2895.45, 3686.55, 670, 1624.24, 4146.22)]
    [InlineData(2333.76, 2060.61, -2940.91, 3741.09, 680, 1648.48, 4200.76)]
    [InlineData(2364.06, 2090.91, -2986.36, 3795.64, 690, 1672.73, 4255.31)]
    [InlineData(2394.36, 2121.21, -3031.82, 3850.18, 700, 1696.97, 4309.85)]
    [InlineData(2424.67, 2151.52, -3077.27, 3904.73, 710, 1721.21, 4364.4)]
    [InlineData(2454.97, 2181.82, -3122.73, 3959.27, 720, 1745.45, 4418.94)]
    [InlineData(2485.27, 2212.12, -3168.18, 4013.82, 730, 1769.7, 4473.49)]
    [InlineData(2515.57, 2242.42, -3213.64, 4068.36, 740, 1793.94, 4528.03)]
    [InlineData(2545.88, 2272.73, -3259.09, 4122.91, 750, 1818.18, 4582.58)]
    [InlineData(2576.18, 2303.03, -3304.55, 4177.45, 760, 1842.42, 4637.12)]
    [InlineData(2606.48, 2333.33, -3350, 4232, 770, 1866.67, 4691.67)]
    [InlineData(2636.79, 2363.64, -3395.45, 4286.55, 780, 1890.91, 4746.22)]
    [InlineData(2667.09, 2393.94, -3440.91, 4341.09, 790, 1915.15, 4800.76)]
    [InlineData(2697.39, 2424.24, -3486.36, 4395.64, 800, 1939.39, 4855.31)]
    [InlineData(2727.7, 2454.55, -3531.82, 4450.18, 810, 1963.64, 4909.85)]
    [InlineData(2758, 2484.85, -3577.27, 4504.73, 820, 1987.88, 4964.4)]
    [InlineData(2788.3, 2515.15, -3622.73, 4559.27, 830, 2012.12, 5018.94)]
    [InlineData(2818.6, 2545.45, -3668.18, 4613.82, 840, 2036.36, 5073.49)]
    [InlineData(2848.91, 2575.76, -3713.64, 4668.36, 850, 2060.61, 5128.03)]
    [InlineData(2879.21, 2606.06, -3759.09, 4722.91, 860, 2084.85, 5182.58)]
    [InlineData(2909.51, 2636.36, -3804.55, 4777.45, 870, 2109.09, 5237.12)]
    [InlineData(2939.82, 2666.67, -3850, 4832, 880, 2133.33, 5291.67)]
    [InlineData(2970.12, 2696.97, -3895.45, 4886.55, 890, 2157.58, 5346.22)]
    [InlineData(3000.42, 2727.27, -3940.91, 4941.09, 900, 2181.82, 5400.76)]
    [InlineData(3030.73, 2757.58, -3986.36, 4995.64, 910, 2206.06, 5455.31)]
    [InlineData(3061.03, 2787.88, -4031.82, 5050.18, 920, 2230.3, 5509.85)]
    [InlineData(3091.33, 2818.18, -4077.27, 5104.73, 930, 2254.55, 5564.4)]
    [InlineData(3121.63, 2848.48, -4122.73, 5159.27, 940, 2278.79, 5618.94)]
    [InlineData(3151.94, 2878.79, -4168.18, 5213.82, 950, 2303.03, 5673.49)]
    [InlineData(3182.24, 2909.09, -4213.64, 5268.36, 960, 2327.27, 5728.03)]
    [InlineData(3212.54, 2939.39, -4259.09, 5322.91, 970, 2351.52, 5782.58)]
    [InlineData(3242.85, 2969.7, -4304.55, 5377.45, 980, 2375.76, 5837.12)]
    [InlineData(3273.15, 3000, -4350, 5432, 990, 2400, 5891.67)]
    [InlineData(3303.45, 3030.3, -4395.45, 5486.55, 1000, 2424.24, 5946.22)]
    public void TemperatureFromNewtonShouldProduceTheExpectedConversionResults(
        double kelvin,
        double celsius,
        double delisle,
        double fahrenheit,
        double newton,
        double reaumur,
        double rankine)
    {
        // Arrange / Act
        Temperature<double> temperature = Temperature.FromNewton(newton);

        //Assert
        Assert.Equal(kelvin, Math.Round(temperature.Kelvin, 2));
        Assert.Equal(celsius, Math.Round(temperature.Celsius, 2));
        Assert.Equal(delisle, Math.Round(temperature.Delisle, 2));
        Assert.Equal(fahrenheit, Math.Round(temperature.Fahrenheit, 2));
        Assert.Equal(newton, Math.Round(temperature.Newton, 2));
        Assert.Equal(reaumur, Math.Round(temperature.Reaumur, 2));
        Assert.Equal(rankine, Math.Round(temperature.Rankine, 2));
    }

    [Theory(DisplayName = "Temperature.FromReaumur should produce the expected conversion results")]
    [InlineData(273.15, 0, 150, 32, 0, 0, 491.67)]
    [InlineData(274.4, 1.25, 148.12, 34.25, 0.41, 1, 493.92)]
    [InlineData(275.65, 2.5, 146.25, 36.5, 0.82, 2, 496.17)]
    [InlineData(276.9, 3.75, 144.38, 38.75, 1.24, 3, 498.42)]
    [InlineData(278.15, 5, 142.5, 41, 1.65, 4, 500.67)]
    [InlineData(279.4, 6.25, 140.62, 43.25, 2.06, 5, 502.92)]
    [InlineData(280.65, 7.5, 138.75, 45.5, 2.48, 6, 505.17)]
    [InlineData(281.9, 8.75, 136.88, 47.75, 2.89, 7, 507.42)]
    [InlineData(283.15, 10, 135, 50, 3.3, 8, 509.67)]
    [InlineData(284.4, 11.25, 133.12, 52.25, 3.71, 9, 511.92)]
    [InlineData(285.65, 12.5, 131.25, 54.5, 4.12, 10, 514.17)]
    [InlineData(298.15, 25, 112.5, 77, 8.25, 20, 536.67)]
    [InlineData(310.65, 37.5, 93.75, 99.5, 12.38, 30, 559.17)]
    [InlineData(323.15, 50, 75, 122, 16.5, 40, 581.67)]
    [InlineData(335.65, 62.5, 56.25, 144.5, 20.62, 50, 604.17)]
    [InlineData(348.15, 75, 37.5, 167, 24.75, 60, 626.67)]
    [InlineData(360.65, 87.5, 18.75, 189.5, 28.88, 70, 649.17)]
    [InlineData(373.15, 100, 0, 212, 33, 80, 671.67)]
    [InlineData(385.65, 112.5, -18.75, 234.5, 37.12, 90, 694.17)]
    [InlineData(398.15, 125, -37.5, 257, 41.25, 100, 716.67)]
    [InlineData(410.65, 137.5, -56.25, 279.5, 45.38, 110, 739.17)]
    [InlineData(423.15, 150, -75, 302, 49.5, 120, 761.67)]
    [InlineData(435.65, 162.5, -93.75, 324.5, 53.62, 130, 784.17)]
    [InlineData(448.15, 175, -112.5, 347, 57.75, 140, 806.67)]
    [InlineData(460.65, 187.5, -131.25, 369.5, 61.88, 150, 829.17)]
    [InlineData(473.15, 200, -150, 392, 66, 160, 851.67)]
    [InlineData(485.65, 212.5, -168.75, 414.5, 70.12, 170, 874.17)]
    [InlineData(498.15, 225, -187.5, 437, 74.25, 180, 896.67)]
    [InlineData(510.65, 237.5, -206.25, 459.5, 78.38, 190, 919.17)]
    [InlineData(523.15, 250, -225, 482, 82.5, 200, 941.67)]
    [InlineData(535.65, 262.5, -243.75, 504.5, 86.62, 210, 964.17)]
    [InlineData(548.15, 275, -262.5, 527, 90.75, 220, 986.67)]
    [InlineData(560.65, 287.5, -281.25, 549.5, 94.88, 230, 1009.17)]
    [InlineData(573.15, 300, -300, 572, 99, 240, 1031.67)]
    [InlineData(585.65, 312.5, -318.75, 594.5, 103.12, 250, 1054.17)]
    [InlineData(598.15, 325, -337.5, 617, 107.25, 260, 1076.67)]
    [InlineData(610.65, 337.5, -356.25, 639.5, 111.38, 270, 1099.17)]
    [InlineData(623.15, 350, -375, 662, 115.5, 280, 1121.67)]
    [InlineData(635.65, 362.5, -393.75, 684.5, 119.62, 290, 1144.17)]
    [InlineData(648.15, 375, -412.5, 707, 123.75, 300, 1166.67)]
    [InlineData(660.65, 387.5, -431.25, 729.5, 127.88, 310, 1189.17)]
    [InlineData(673.15, 400, -450, 752, 132, 320, 1211.67)]
    [InlineData(685.65, 412.5, -468.75, 774.5, 136.12, 330, 1234.17)]
    [InlineData(698.15, 425, -487.5, 797, 140.25, 340, 1256.67)]
    [InlineData(710.65, 437.5, -506.25, 819.5, 144.38, 350, 1279.17)]
    [InlineData(723.15, 450, -525, 842, 148.5, 360, 1301.67)]
    [InlineData(735.65, 462.5, -543.75, 864.5, 152.62, 370, 1324.17)]
    [InlineData(748.15, 475, -562.5, 887, 156.75, 380, 1346.67)]
    [InlineData(760.65, 487.5, -581.25, 909.5, 160.88, 390, 1369.17)]
    [InlineData(773.15, 500, -600, 932, 165, 400, 1391.67)]
    [InlineData(785.65, 512.5, -618.75, 954.5, 169.12, 410, 1414.17)]
    [InlineData(798.15, 525, -637.5, 977, 173.25, 420, 1436.67)]
    [InlineData(810.65, 537.5, -656.25, 999.5, 177.38, 430, 1459.17)]
    [InlineData(823.15, 550, -675, 1022, 181.5, 440, 1481.67)]
    [InlineData(835.65, 562.5, -693.75, 1044.5, 185.62, 450, 1504.17)]
    [InlineData(848.15, 575, -712.5, 1067, 189.75, 460, 1526.67)]
    [InlineData(860.65, 587.5, -731.25, 1089.5, 193.88, 470, 1549.17)]
    [InlineData(873.15, 600, -750, 1112, 198, 480, 1571.67)]
    [InlineData(885.65, 612.5, -768.75, 1134.5, 202.12, 490, 1594.17)]
    [InlineData(898.15, 625, -787.5, 1157, 206.25, 500, 1616.67)]
    [InlineData(910.65, 637.5, -806.25, 1179.5, 210.38, 510, 1639.17)]
    [InlineData(923.15, 650, -825, 1202, 214.5, 520, 1661.67)]
    [InlineData(935.65, 662.5, -843.75, 1224.5, 218.62, 530, 1684.17)]
    [InlineData(948.15, 675, -862.5, 1247, 222.75, 540, 1706.67)]
    [InlineData(960.65, 687.5, -881.25, 1269.5, 226.88, 550, 1729.17)]
    [InlineData(973.15, 700, -900, 1292, 231, 560, 1751.67)]
    [InlineData(985.65, 712.5, -918.75, 1314.5, 235.12, 570, 1774.17)]
    [InlineData(998.15, 725, -937.5, 1337, 239.25, 580, 1796.67)]
    [InlineData(1010.65, 737.5, -956.25, 1359.5, 243.38, 590, 1819.17)]
    [InlineData(1023.15, 750, -975, 1382, 247.5, 600, 1841.67)]
    [InlineData(1035.65, 762.5, -993.75, 1404.5, 251.63, 610, 1864.17)]
    [InlineData(1048.15, 775, -1012.5, 1427, 255.75, 620, 1886.67)]
    [InlineData(1060.65, 787.5, -1031.25, 1449.5, 259.88, 630, 1909.17)]
    [InlineData(1073.15, 800, -1050, 1472, 264, 640, 1931.67)]
    [InlineData(1085.65, 812.5, -1068.75, 1494.5, 268.13, 650, 1954.17)]
    [InlineData(1098.15, 825, -1087.5, 1517, 272.25, 660, 1976.67)]
    [InlineData(1110.65, 837.5, -1106.25, 1539.5, 276.38, 670, 1999.17)]
    [InlineData(1123.15, 850, -1125, 1562, 280.5, 680, 2021.67)]
    [InlineData(1135.65, 862.5, -1143.75, 1584.5, 284.63, 690, 2044.17)]
    [InlineData(1148.15, 875, -1162.5, 1607, 288.75, 700, 2066.67)]
    [InlineData(1160.65, 887.5, -1181.25, 1629.5, 292.88, 710, 2089.17)]
    [InlineData(1173.15, 900, -1200, 1652, 297, 720, 2111.67)]
    [InlineData(1185.65, 912.5, -1218.75, 1674.5, 301.13, 730, 2134.17)]
    [InlineData(1198.15, 925, -1237.5, 1697, 305.25, 740, 2156.67)]
    [InlineData(1210.65, 937.5, -1256.25, 1719.5, 309.38, 750, 2179.17)]
    [InlineData(1223.15, 950, -1275, 1742, 313.5, 760, 2201.67)]
    [InlineData(1235.65, 962.5, -1293.75, 1764.5, 317.63, 770, 2224.17)]
    [InlineData(1248.15, 975, -1312.5, 1787, 321.75, 780, 2246.67)]
    [InlineData(1260.65, 987.5, -1331.25, 1809.5, 325.88, 790, 2269.17)]
    [InlineData(1273.15, 1000, -1350, 1832, 330, 800, 2291.67)]
    [InlineData(1285.65, 1012.5, -1368.75, 1854.5, 334.13, 810, 2314.17)]
    [InlineData(1298.15, 1025, -1387.5, 1877, 338.25, 820, 2336.67)]
    [InlineData(1310.65, 1037.5, -1406.25, 1899.5, 342.38, 830, 2359.17)]
    [InlineData(1323.15, 1050, -1425, 1922, 346.5, 840, 2381.67)]
    [InlineData(1335.65, 1062.5, -1443.75, 1944.5, 350.62, 850, 2404.17)]
    [InlineData(1348.15, 1075, -1462.5, 1967, 354.75, 860, 2426.67)]
    [InlineData(1360.65, 1087.5, -1481.25, 1989.5, 358.88, 870, 2449.17)]
    [InlineData(1373.15, 1100, -1500, 2012, 363, 880, 2471.67)]
    [InlineData(1385.65, 1112.5, -1518.75, 2034.5, 367.12, 890, 2494.17)]
    [InlineData(1398.15, 1125, -1537.5, 2057, 371.25, 900, 2516.67)]
    [InlineData(1410.65, 1137.5, -1556.25, 2079.5, 375.38, 910, 2539.17)]
    [InlineData(1423.15, 1150, -1575, 2102, 379.5, 920, 2561.67)]
    [InlineData(1435.65, 1162.5, -1593.75, 2124.5, 383.62, 930, 2584.17)]
    [InlineData(1448.15, 1175, -1612.5, 2147, 387.75, 940, 2606.67)]
    [InlineData(1460.65, 1187.5, -1631.25, 2169.5, 391.88, 950, 2629.17)]
    [InlineData(1473.15, 1200, -1650, 2192, 396, 960, 2651.67)]
    [InlineData(1485.65, 1212.5, -1668.75, 2214.5, 400.12, 970, 2674.17)]
    [InlineData(1498.15, 1225, -1687.5, 2237, 404.25, 980, 2696.67)]
    [InlineData(1510.65, 1237.5, -1706.25, 2259.5, 408.38, 990, 2719.17)]
    [InlineData(1523.15, 1250, -1725, 2282, 412.5, 1000, 2741.67)]
    public void TemperatureFromReaumurShouldProduceTheExpectedConversionResults(
        double kelvin,
        double celsius,
        double delisle,
        double fahrenheit,
        double newton,
        double reaumur,
        double rankine)
    {
        // Arrange / Act
        Temperature<double> temperature = Temperature.FromReaumur(reaumur);

        //Assert
        Assert.Equal(kelvin, Math.Round(temperature.Kelvin, 2));
        Assert.Equal(celsius, Math.Round(temperature.Celsius, 2));
        Assert.Equal(delisle, Math.Round(temperature.Delisle, 2));
        Assert.Equal(fahrenheit, Math.Round(temperature.Fahrenheit, 2));
        Assert.Equal(newton, Math.Round(temperature.Newton, 2));
        Assert.Equal(reaumur, Math.Round(temperature.Reaumur, 2));
        Assert.Equal(rankine, Math.Round(temperature.Rankine, 2));
    }

    [Theory(DisplayName = "Temperature.FromRankine should produce the expected conversion results")]
    [InlineData(0, -273.15, 559.72, -459.67, -90.14, -218.52, 0)]
    [InlineData(0.56, -272.59, 558.89, -458.67, -89.96, -218.08, 1)]
    [InlineData(1.11, -272.04, 558.06, -457.67, -89.77, -217.63, 2)]
    [InlineData(1.67, -271.48, 557.22, -456.67, -89.59, -217.19, 3)]
    [InlineData(2.22, -270.93, 556.39, -455.67, -89.41, -216.74, 4)]
    [InlineData(2.78, -270.37, 555.56, -454.67, -89.22, -216.3, 5)]
    [InlineData(3.33, -269.82, 554.72, -453.67, -89.04, -215.85, 6)]
    [InlineData(3.89, -269.26, 553.89, -452.67, -88.86, -215.41, 7)]
    [InlineData(4.44, -268.71, 553.06, -451.67, -88.67, -214.96, 8)]
    [InlineData(5, -268.15, 552.22, -450.67, -88.49, -214.52, 9)]
    [InlineData(5.56, -267.59, 551.39, -449.67, -88.31, -214.08, 10)]
    [InlineData(11.11, -262.04, 543.06, -439.67, -86.47, -209.63, 20)]
    [InlineData(16.67, -256.48, 534.72, -429.67, -84.64, -205.19, 30)]
    [InlineData(22.22, -250.93, 526.39, -419.67, -82.81, -200.74, 40)]
    [InlineData(27.78, -245.37, 518.06, -409.67, -80.97, -196.3, 50)]
    [InlineData(33.33, -239.82, 509.72, -399.67, -79.14, -191.85, 60)]
    [InlineData(38.89, -234.26, 501.39, -389.67, -77.31, -187.41, 70)]
    [InlineData(44.44, -228.71, 493.06, -379.67, -75.47, -182.96, 80)]
    [InlineData(50, -223.15, 484.72, -369.67, -73.64, -178.52, 90)]
    [InlineData(55.56, -217.59, 476.39, -359.67, -71.81, -174.08, 100)]
    [InlineData(61.11, -212.04, 468.06, -349.67, -69.97, -169.63, 110)]
    [InlineData(66.67, -206.48, 459.72, -339.67, -68.14, -165.19, 120)]
    [InlineData(72.22, -200.93, 451.39, -329.67, -66.31, -160.74, 130)]
    [InlineData(77.78, -195.37, 443.06, -319.67, -64.47, -156.3, 140)]
    [InlineData(83.33, -189.82, 434.72, -309.67, -62.64, -151.85, 150)]
    [InlineData(88.89, -184.26, 426.39, -299.67, -60.81, -147.41, 160)]
    [InlineData(94.44, -178.71, 418.06, -289.67, -58.97, -142.96, 170)]
    [InlineData(100, -173.15, 409.72, -279.67, -57.14, -138.52, 180)]
    [InlineData(105.56, -167.59, 401.39, -269.67, -55.31, -134.08, 190)]
    [InlineData(111.11, -162.04, 393.06, -259.67, -53.47, -129.63, 200)]
    [InlineData(116.67, -156.48, 384.72, -249.67, -51.64, -125.19, 210)]
    [InlineData(122.22, -150.93, 376.39, -239.67, -49.81, -120.74, 220)]
    [InlineData(127.78, -145.37, 368.06, -229.67, -47.97, -116.3, 230)]
    [InlineData(133.33, -139.82, 359.72, -219.67, -46.14, -111.85, 240)]
    [InlineData(138.89, -134.26, 351.39, -209.67, -44.31, -107.41, 250)]
    [InlineData(144.44, -128.71, 343.06, -199.67, -42.47, -102.96, 260)]
    [InlineData(150, -123.15, 334.72, -189.67, -40.64, -98.52, 270)]
    [InlineData(155.56, -117.59, 326.39, -179.67, -38.81, -94.08, 280)]
    [InlineData(161.11, -112.04, 318.06, -169.67, -36.97, -89.63, 290)]
    [InlineData(166.67, -106.48, 309.72, -159.67, -35.14, -85.19, 300)]
    [InlineData(172.22, -100.93, 301.39, -149.67, -33.31, -80.74, 310)]
    [InlineData(177.78, -95.37, 293.06, -139.67, -31.47, -76.3, 320)]
    [InlineData(183.33, -89.82, 284.72, -129.67, -29.64, -71.85, 330)]
    [InlineData(188.89, -84.26, 276.39, -119.67, -27.81, -67.41, 340)]
    [InlineData(194.44, -78.71, 268.06, -109.67, -25.97, -62.96, 350)]
    [InlineData(200, -73.15, 259.72, -99.67, -24.14, -58.52, 360)]
    [InlineData(205.56, -67.59, 251.39, -89.67, -22.31, -54.08, 370)]
    [InlineData(211.11, -62.04, 243.06, -79.67, -20.47, -49.63, 380)]
    [InlineData(216.67, -56.48, 234.72, -69.67, -18.64, -45.19, 390)]
    [InlineData(222.22, -50.93, 226.39, -59.67, -16.81, -40.74, 400)]
    [InlineData(227.78, -45.37, 218.06, -49.67, -14.97, -36.3, 410)]
    [InlineData(233.33, -39.82, 209.72, -39.67, -13.14, -31.85, 420)]
    [InlineData(238.89, -34.26, 201.39, -29.67, -11.31, -27.41, 430)]
    [InlineData(244.44, -28.71, 193.06, -19.67, -9.47, -22.96, 440)]
    [InlineData(250, -23.15, 184.72, -9.67, -7.64, -18.52, 450)]
    [InlineData(255.56, -17.59, 176.39, 0.33, -5.81, -14.08, 460)]
    [InlineData(261.11, -12.04, 168.06, 10.33, -3.97, -9.63, 470)]
    [InlineData(266.67, -6.48, 159.72, 20.33, -2.14, -5.19, 480)]
    [InlineData(272.22, -0.93, 151.39, 30.33, -0.31, -0.74, 490)]
    [InlineData(277.78, 4.63, 143.06, 40.33, 1.53, 3.7, 500)]
    [InlineData(283.33, 10.18, 134.72, 50.33, 3.36, 8.15, 510)]
    [InlineData(288.89, 15.74, 126.39, 60.33, 5.19, 12.59, 520)]
    [InlineData(294.44, 21.29, 118.06, 70.33, 7.03, 17.04, 530)]
    [InlineData(300, 26.85, 109.72, 80.33, 8.86, 21.48, 540)]
    [InlineData(305.56, 32.41, 101.39, 90.33, 10.69, 25.92, 550)]
    [InlineData(311.11, 37.96, 93.06, 100.33, 12.53, 30.37, 560)]
    [InlineData(316.67, 43.52, 84.72, 110.33, 14.36, 34.81, 570)]
    [InlineData(322.22, 49.07, 76.39, 120.33, 16.19, 39.26, 580)]
    [InlineData(327.78, 54.63, 68.06, 130.33, 18.03, 43.7, 590)]
    [InlineData(333.33, 60.18, 59.72, 140.33, 19.86, 48.15, 600)]
    [InlineData(338.89, 65.74, 51.39, 150.33, 21.69, 52.59, 610)]
    [InlineData(344.44, 71.29, 43.06, 160.33, 23.53, 57.04, 620)]
    [InlineData(350, 76.85, 34.72, 170.33, 25.36, 61.48, 630)]
    [InlineData(355.56, 82.41, 26.39, 180.33, 27.19, 65.92, 640)]
    [InlineData(361.11, 87.96, 18.06, 190.33, 29.03, 70.37, 650)]
    [InlineData(366.67, 93.52, 9.72, 200.33, 30.86, 74.81, 660)]
    [InlineData(372.22, 99.07, 1.39, 210.33, 32.69, 79.26, 670)]
    [InlineData(377.78, 104.63, -6.94, 220.33, 34.53, 83.7, 680)]
    [InlineData(383.33, 110.18, -15.28, 230.33, 36.36, 88.15, 690)]
    [InlineData(388.89, 115.74, -23.61, 240.33, 38.19, 92.59, 700)]
    [InlineData(394.44, 121.29, -31.94, 250.33, 40.03, 97.04, 710)]
    [InlineData(400, 126.85, -40.28, 260.33, 41.86, 101.48, 720)]
    [InlineData(405.56, 132.41, -48.61, 270.33, 43.69, 105.92, 730)]
    [InlineData(411.11, 137.96, -56.94, 280.33, 45.53, 110.37, 740)]
    [InlineData(416.67, 143.52, -65.27, 290.33, 47.36, 114.81, 750)]
    [InlineData(422.22, 149.07, -73.61, 300.33, 49.19, 119.26, 760)]
    [InlineData(427.78, 154.63, -81.94, 310.33, 51.03, 123.7, 770)]
    [InlineData(433.33, 160.18, -90.28, 320.33, 52.86, 128.15, 780)]
    [InlineData(438.89, 165.74, -98.61, 330.33, 54.69, 132.59, 790)]
    [InlineData(444.44, 171.29, -106.94, 340.33, 56.53, 137.04, 800)]
    [InlineData(450, 176.85, -115.28, 350.33, 58.36, 141.48, 810)]
    [InlineData(455.56, 182.41, -123.61, 360.33, 60.19, 145.92, 820)]
    [InlineData(461.11, 187.96, -131.94, 370.33, 62.03, 150.37, 830)]
    [InlineData(466.67, 193.52, -140.27, 380.33, 63.86, 154.81, 840)]
    [InlineData(472.22, 199.07, -148.61, 390.33, 65.69, 159.26, 850)]
    [InlineData(477.78, 204.63, -156.94, 400.33, 67.53, 163.7, 860)]
    [InlineData(483.33, 210.18, -165.28, 410.33, 69.36, 168.15, 870)]
    [InlineData(488.89, 215.74, -173.61, 420.33, 71.19, 172.59, 880)]
    [InlineData(494.44, 221.29, -181.94, 430.33, 73.03, 177.04, 890)]
    [InlineData(500, 226.85, -190.28, 440.33, 74.86, 181.48, 900)]
    [InlineData(505.56, 232.41, -198.61, 450.33, 76.69, 185.92, 910)]
    [InlineData(511.11, 237.96, -206.94, 460.33, 78.53, 190.37, 920)]
    [InlineData(516.67, 243.52, -215.27, 470.33, 80.36, 194.81, 930)]
    [InlineData(522.22, 249.07, -223.61, 480.33, 82.19, 199.26, 940)]
    [InlineData(527.78, 254.63, -231.94, 490.33, 84.03, 203.7, 950)]
    [InlineData(533.33, 260.18, -240.28, 500.33, 85.86, 208.15, 960)]
    [InlineData(538.89, 265.74, -248.61, 510.33, 87.69, 212.59, 970)]
    [InlineData(544.44, 271.29, -256.94, 520.33, 89.53, 217.04, 980)]
    [InlineData(550, 276.85, -265.28, 530.33, 91.36, 221.48, 990)]
    [InlineData(555.56, 282.41, -273.61, 540.33, 93.19, 225.92, 1000)]
    public void TemperatureFromRankineShouldProduceTheExpectedConversionResults(
        double kelvin,
        double celsius,
        double delisle,
        double fahrenheit,
        double newton,
        double reaumur,
        double rankine)
    {
        // Arrange / Act
        Temperature<double> temperature = Temperature.FromRankine(rankine);

        //Assert
        Assert.Equal(kelvin, Math.Round(temperature.Kelvin, 2));
        Assert.Equal(celsius, Math.Round(temperature.Celsius, 2));
        Assert.Equal(delisle, Math.Round(temperature.Delisle, 2));
        Assert.Equal(fahrenheit, Math.Round(temperature.Fahrenheit, 2));
        Assert.Equal(newton, Math.Round(temperature.Newton, 2));
        Assert.Equal(reaumur, Math.Round(temperature.Reaumur, 2));
        Assert.Equal(rankine, Math.Round(temperature.Rankine, 2));
    }
}
